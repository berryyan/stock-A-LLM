{
  "total_tests": 0,
  "total_passed": 0,
  "total_failed": 0,
  "agents": {
    "SQL Agent": {
      "success": false,
      "elapsed": 537.9450876712799,
      "error": "结果文件未生成",
      "stdout": "2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:13:51 - date_intelligence - INFO - 已清理所有日期智能解析缓存\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:13:51 - schema_knowledge_base - INFO - 开始构建Schema知识库...\n2025-07-07 11:13:51 - schema_knowledge_base - INFO - Schema知识库构建完成，耗时: 0.17秒\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:13:51 - sql_agent_modular - INFO - 初始化SQL Agent V2，准备加载Schema信息...\n2025-07-07 11:13:51 - sql_agent_modular - INFO - 使用Schema知识库获取表结构信息...\n2025-07-07 11:13:51 - sql_agent_modular - INFO - Schema信息加载完成，共15个表\n2025-07-07 11:13:51 - sql_agent_modular - INFO - SQL Agent V2初始化完成\n================================================================================\nSQL Agent模块化版本综合测试\n基于test-guide-comprehensive.md v5.3\n开始时间: 2025-07-07 11:13:51\n================================================================================\n\n============================================================\n测试类别: 1.1 股价查询\n测试名称: 基础查询-最新\n查询语句: 贵州茅台最新股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:51 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台最新股价\n2025-07-07 11:13:51 - date_intelligence - INFO - 数据驱动查询最新交易日，查询范围：最近10天内\n2025-07-07 11:13:51 - date_intelligence - INFO - 更新今日交易日缓存: 2025-07-04\n2025-07-07 11:13:51 - date_intelligence - INFO - 获取最近交易日成功: 2025-07-04\n2025-07-07 11:13:51 - date_intelligence - INFO - 日期智能解析: '贵州茅台最新股价' -> '贵州茅台 2025-07-04股价'\n2025-07-07 11:13:51 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:51 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-07-04股价\n2025-07-07 11:13:51 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:13:51 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:13:51 - stock_code_mapper - INFO - 开始刷新股票代码缓存\n2025-07-07 11:13:52 - stock_code_mapper - INFO - 股票代码缓存刷新完成，共缓存22556个映射\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询\n测试名称: 指定日期\n查询语句: 贵州茅台20250627的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台20250627的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台20250627的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-06-27\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到报告期: 20250627\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询\n测试名称: 相对日期-昨天\n查询语句: 平安银行昨天的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 平安银行昨天的股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '平安银行昨天的股价' -> '平安银行 2025-07-03的股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行 2025-07-03的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询\n测试名称: 股票代码查询\n查询语句: 600519.SH最新股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 600519.SH最新股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '600519.SH最新股价' -> '600519.SH 2025-07-04股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 600519.SH 2025-07-04股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 2025-07-04\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询\n测试名称: 日期格式变体\n查询语句: 贵州茅台2025-06-27的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台2025-06-27的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台2025-06-27的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-06-27\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询\n测试名称: 深市股票代码\n查询语句: 000001.SZ的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 000001.SZ的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 000001.SZ的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: SZ的股价\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 查询 '股价查询' 未指定日期，使用最新交易日\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-边界测试\n测试名称: 中文日期格式\n查询语句: 贵州茅台2025年06月27日的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台2025年06月27日的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台2025年06月27日的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 日的\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-06-27\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-边界测试\n测试名称: 无后缀股票代码\n查询语句: 600519最新股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 600519最新股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '600519最新股价' -> '600519 2025-07-04股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 600519 2025-07-04股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票代码 600519，转换为: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-边界测试\n测试名称: 小写后缀\n查询语句: 600519.sh最新股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 600519.sh最新股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '600519.sh最新股价' -> '600519.sh 2025-07-04股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 600519.sh 2025-07-04股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - WARNING - 证券代码后缀大小写错误: sh\n2025-07-07 11:13:52 - unified_stock_validator - WARNING - 证券代码后缀大小写错误: sh\n2025-07-07 11:13:52 - parameter_extractor - WARNING - 股票验证失败: 证券代码后缀大小写错误，应为.SH\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-边界测试\n测试名称: 相对日期-前天\n查询语句: 贵州茅台前天的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台前天的股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '贵州茅台前天的股价' -> '贵州茅台 2025-07-02的股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'前天'解析为相对时间点: 2025-07-02\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-07-02的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-02\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-边界测试\n测试名称: 相对日期-上个交易日\n查询语句: 贵州茅台上个交易日的股价\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台上个交易日的股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '贵州茅台上个交易日的股价' -> '贵州茅台 2025-07-03的股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'上个交易日'解析为相对时间点: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-07-03的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-错误用例\n测试名称: 股票简称错误\n查询语句: 茅台最新股价\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 茅台最新股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '茅台最新股价' -> '茅台 2025-07-04股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 茅台 2025-07-04股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:13:52 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:13:52 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:13:52 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：贵州茅台\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-错误用例\n测试名称: 歧义股票名称\n查询语句: 平安最新股价\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 平安最新股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '平安最新股价' -> '平安 2025-07-04股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安 2025-07-04股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 平安\n2025-07-07 11:13:52 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-错误用例\n测试名称: 不存在的股票代码\n查询语句: 123456最新股价\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 123456最新股价\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '123456最新股价' -> '123456 2025-07-04股价'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 123456 2025-07-04股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - mysql_connector - ERROR - 查询执行失败: List argument must consist only of tuples or dictionaries\n2025-07-07 11:13:52 - mysql_connector - ERROR - 查询语句: \n            SELECT ts_code \n            FROM tu_stock_basic \n            WHERE symbol = %s AND list_status = 'L'\n            LIMIT 1\n            \n2025-07-07 11:13:52 - stock_code_mapper - ERROR - 查询symbol失败: List argument must consist only of tuples or dictionaries\n2025-07-07 11:13:52 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-错误用例\n测试名称: 无效日期\n查询语句: 贵州茅台2025-06-31的股价\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台2025-06-31的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台2025-06-31的股价\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-06-31\n2025-07-07 11:13:52 - error_handler - INFO - [INVALID_DATE_FORMAT] 日期格式错误\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.1 股价查询-错误用例\n测试名称: 空字符串查询\n查询语句: \n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:13:52 - error_handler - INFO - [EMPTY_QUERY] 查询内容为空\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交量-昨天\n查询语句: 平安银行昨天的成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 平安银行昨天的成交量\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '平安银行昨天的成交量' -> '平安银行 2025-07-03的成交量'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行 2025-07-03的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交量-最新\n查询语句: 贵州茅台最新成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台最新成交量\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '贵州茅台最新成交量' -> '贵州茅台 2025-07-04成交量'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-07-04成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交量-默认\n查询语句: 万科A的成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 万科A的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:13:52 - error_handler - ERROR - [MISSING_REQUIRED_DATE] 此查询需要指定日期\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交量-今天\n查询语句: 600519.SH今天的成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 600519.SH今天的成交量\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '600519.SH今天的成交量' -> '600519.SH 2025-07-04的成交量'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'今天'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 600519.SH 2025-07-04的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交额-默认\n查询语句: 中国平安的成交额\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 中国平安的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交额\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:13:52 - error_handler - ERROR - [MISSING_REQUIRED_DATE] 此查询需要指定日期\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交额-昨天\n查询语句: 宁德时代昨天的成交额\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 宁德时代昨天的成交额\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '宁德时代昨天的成交额' -> '宁德时代 2025-07-03的成交额'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代 2025-07-03的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询词 '宁德时代' 转换为: 300750.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 300750.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 300750.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 300750.SZ -> 300750.SZ (宁德时代)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交额-最新\n查询语句: 比亚迪最新成交额\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 比亚迪最新成交额\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '比亚迪最新成交额' -> '比亚迪 2025-07-04成交额'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 比亚迪 2025-07-04成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 002594.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 002594.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 002594.SZ -> 002594.SZ (比亚迪)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询\n测试名称: 成交额-股票代码\n查询语句: 000001.SZ的成交额\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 000001.SZ的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 000001.SZ的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: SZ的成交额\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:13:52 - error_handler - ERROR - [MISSING_REQUIRED_DATE] 此查询需要指定日期\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-边界测试\n测试名称: 股票名称清理测试\n查询语句: 万科A前天的成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 万科A前天的成交量\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '万科A前天的成交量' -> '万科A 2025-07-02的成交量'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'前天'解析为相对时间点: 2025-07-02\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A 2025-07-02的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-02\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-边界测试\n测试名称: 日期替换不影响股票提取\n查询语句: 中国平安昨天的成交额\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 中国平安昨天的成交额\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '中国平安昨天的成交额' -> '中国平安 2025-07-03的成交额'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安 2025-07-03的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-边界测试\n测试名称: 日期替换后的股票提取\n查询语句: 贵州茅台最近5天的成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台最近5天的成交量\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '贵州茅台最近5天的成交量' -> '贵州茅台 2025-06-30至2025-07-04的成交量'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'最近5天'解析为时间段: 2025-06-30至2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-06-30至2025-07-04的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-06-30\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-边界测试\n测试名称: 今天替换测试\n查询语句: 宁德时代今天的成交额\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 宁德时代今天的成交额\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '宁德时代今天的成交额' -> '宁德时代 2025-07-04的成交额'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'今天'解析为当前时间点: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代 2025-07-04的成交额\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询词 '宁德时代' 转换为: 300750.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 300750.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 300750.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 300750.SZ -> 300750.SZ (宁德时代)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-边界测试\n测试名称: 上个交易日\n查询语句: 比亚迪上个交易日的成交量\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 比亚迪上个交易日的成交量\n2025-07-07 11:13:52 - date_intelligence - INFO - 日期智能解析: '比亚迪上个交易日的成交量' -> '比亚迪 2025-07-03的成交量'\n2025-07-07 11:13:52 - date_intelligence - INFO - 解析详情: 将'上个交易日'解析为相对时间点: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 比亚迪 2025-07-03的成交量\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 从查询中提取到股票: 002594.SZ\n2025-07-07 11:13:52 - unified_stock_validator - INFO - 成功提取股票代码: 002594.SZ, 查询意图: comprehensive\n2025-07-07 11:13:52 - stock_validation_helper - INFO - 股票验证成功: 002594.SZ -> 002594.SZ (比亚迪)\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:13:52 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-错误用例\n测试名称: 误匹配排名模板\n查询语句: 成交量排名\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 收到查询请求: 成交量排名\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交量排名\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:13:52 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:13:52 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量排名\n2025-07-07 11:13:52 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:13:52 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for trading volume (成交量) would likely be `tu_daily_detail` or `tu_daily_basic`. I should check the schema of these tables to find the volume column.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail, tu_daily_basic\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `vol` column which represents trading volume (成交量) in lots (手). To get the volume ranking, I should query this table, order by volume in descending order, and limit to 10 results.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 10\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here is the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-错误用例\n测试名称: 误匹配排名模板\n查询语句: 成交额排行\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 成交额排行\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额排行\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-错误用例\n测试名称: 股票简称错误\n查询语句: 茅台的成交量\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 茅台的成交量\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 茅台的成交量\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:14:15 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:14:15 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:14:15 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:14:15 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：贵州茅台\n2025-07-07 11:14:15 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-错误用例\n测试名称: 不存在的股票\n查询语句: 不存在股票的成交量\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 不存在股票的成交量\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 不存在股票的成交量\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 不存在股票\n2025-07-07 11:14:15 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:15 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.2 成交量查询-错误用例\n测试名称: 未来日期\n查询语句: 贵州茅台2099年的成交量\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台2099年的成交量\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台2099年的成交量\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE] 此查询需要指定日期\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.3 估值指标查询\n测试名称: 市盈率查询\n查询语句: 中国平安的市盈率\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 中国平安的市盈率\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安的市盈率\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 估值指标查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 市盈率\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 查询 '估值指标查询' 未指定日期，使用最新交易日\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.3 估值指标查询\n测试名称: PE查询\n查询语句: 贵州茅台的PE\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的PE\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的PE\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 估值指标查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 查询 '估值指标查询' 未指定日期，使用最新交易日\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.3 估值指标查询\n测试名称: 市净率查询\n查询语句: 平安银行的市净率\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 平安银行的市净率\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行的市净率\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 估值指标查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 市净率\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 查询 '估值指标查询' 未指定日期，使用最新交易日\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.3 估值指标查询\n测试名称: PB查询\n查询语句: 比亚迪的PB\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 比亚迪的PB\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 比亚迪的PB\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: 估值指标查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 002594.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 002594.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 002594.SZ -> 002594.SZ (比亚迪)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 查询 '估值指标查询' 未指定日期，使用最新交易日\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询\n测试名称: 最近N天\n查询语句: 中国平安最近10天的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 中国平安最近10天的K线\n2025-07-07 11:14:15 - date_intelligence - INFO - 日期智能解析: '中国平安最近10天的K线' -> '中国平安 2025-06-23至2025-07-04的K线'\n2025-07-07 11:14:15 - date_intelligence - INFO - 解析详情: 将'最近10天'解析为时间段: 2025-06-23至2025-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安 2025-06-23至2025-07-04的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-23 至 2025-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询\n测试名称: 日期范围\n查询语句: 宁德时代从2025/06/01到2025/06/30的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 宁德时代从2025/06/01到2025/06/30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代从2025/06/01到2025/06/30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 宁德时代从\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 宁德时代从2025/06/01到2025/06/30\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: K线\n2025-07-07 11:14:15 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-01 至 2025-06-30\n2025-07-07 11:14:15 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询\n测试名称: 中文日期\n查询语句: 宁德时代从6月1日到6月30日的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 宁德时代从6月1日到6月30日的K线\n2025-07-07 11:14:15 - date_intelligence - INFO - 日期智能解析: '宁德时代从6月1日到6月30日的K线' -> '宁德时代 2025-06-01至2025-06-30的K线'\n2025-07-07 11:14:15 - date_intelligence - INFO - 解析详情: 将'从6月1日到6月30日'解析为时间段: 2025-06-01至2025-06-30\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代 2025-06-01至2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询词 '宁德时代' 转换为: 300750.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 300750.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 300750.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 300750.SZ -> 300750.SZ (宁德时代)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-01 至 2025-06-30\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询\n测试名称: 走势查询\n查询语句: 贵州茅台最近30天的走势\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台最近30天的走势\n2025-07-07 11:14:15 - date_intelligence - INFO - 日期智能解析: '贵州茅台最近30天的走势' -> '贵州茅台 2025-05-23至2025-07-04的走势'\n2025-07-07 11:14:15 - date_intelligence - INFO - 解析详情: 将'最近30天'解析为时间段: 2025-05-23至2025-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-05-23至2025-07-04的走势\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 走势\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-05-23 至 2025-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 至连接符\n查询语句: 贵州茅台2025-06-01至2025-06-30的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台2025-06-01至2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台2025-06-01至2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-01 至 2025-06-30\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 到连接符\n查询语句: 万科A2025-06-01到2025-06-30的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 万科A2025-06-01到2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A2025-06-01到2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-01 至 2025-06-30\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: -连接符\n查询语句: 中国平安2025-06-01-2025-06-30的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 中国平安2025-06-01-2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安2025-06-01-2025-06-30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-01 至 2025-06-30\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: ~连接符\n查询语句: 比亚迪2025/6/1~2025/6/30的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 比亚迪2025/6/1~2025/6/30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 比亚迪2025/6/1~2025/6/30的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 002594.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 002594.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 002594.SZ -> 002594.SZ (比亚迪)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-01 至 2025-06-30\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 月份转换\n查询语句: 万科A6月的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 万科A6月的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A6月的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 年份转换\n查询语句: 中国平安2024年的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 中国平安2024年的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安2024年的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到年份范围: 2024-01-01 至 2024-12-31\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 季度转换\n查询语句: 宁德时代2025年第二季度的走势\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 宁德时代2025年第二季度的走势\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代2025年第二季度的走势\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询词 '宁德时代' 转换为: 300750.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 300750.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 300750.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 年第二季度\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 300750.SZ -> 300750.SZ (宁德时代)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到报告期: 20250630\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 相对月份\n查询语句: 贵州茅台本月的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台本月的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台本月的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 上个月\n查询语句: 平安银行上个月的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 平安银行上个月的K线\n2025-07-07 11:14:15 - date_intelligence - INFO - 日期智能解析: '平安银行上个月的K线' -> '平安银行 2025-06-05的K线'\n2025-07-07 11:14:15 - date_intelligence - INFO - 解析详情: 将'上个月'解析为相对时间点: 2025-06-05\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行 2025-06-05的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 去年\n查询语句: 比亚迪去年的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 比亚迪去年的K线\n2025-07-07 11:14:15 - date_intelligence - INFO - 日期智能解析: '比亚迪去年的K线' -> '比亚迪 2024-07-04的K线'\n2025-07-07 11:14:15 - date_intelligence - INFO - 解析详情: 将'去年'解析为年份相对: 2024-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 比亚迪 2024-07-04的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 002594.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 002594.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 002594.SZ -> 002594.SZ (比亚迪)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 中文数字-二十\n查询语句: 贵州茅台最近二十天的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台最近二十天的K线\n2025-07-07 11:14:15 - date_intelligence - INFO - 日期智能解析: '贵州茅台最近二十天的K线' -> '贵州茅台 2025-06-09至2025-07-04的K线'\n2025-07-07 11:14:15 - date_intelligence - INFO - 解析详情: 将'最近二十天'解析为时间段: 2025-06-09至2025-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-06-09至2025-07-04的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到日期范围: 2025-06-09 至 2025-07-04\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 中文数字-十\n查询语句: 中国平安前十天的走势\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 中国平安前十天的走势\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安前十天的走势\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 国平安前十天\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 中国平安前十\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 中国平安前十天\n2025-07-07 11:14:15 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:15 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-边界测试\n测试名称: 中文数字-一百\n查询语句: 万科A最近一百天的K线\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: 万科A最近一百天的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A最近一百天的K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:14:15 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:14:15 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 最近一百天\n2025-07-07 11:14:15 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:14:15 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:14:15 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-错误用例\n测试名称: 无股票名称\n查询语句: K线\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 收到查询请求: K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 日期智能处理后的查询: K线\n2025-07-07 11:14:15 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:14:15 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:15 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for \"K线\" (K-line/candlestick chart data) would likely be `tu_daily_detail` which probably contains daily stock price details. I should check its schema first.\n\nAction: sql_db_schema\nAction Input: \"tu_daily_detail\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m2025-07-07 11:14:33 - sql_agent_modular - ERROR - LLM查询执行失败: An output parsing error occurred. In order to pass this error back to the agent and have it try again, pass `handle_parsing_errors=True` to the AgentExecutor. This is the error: Could not parse LLM output: `The `tu_daily_detail` table contains all the necessary fields for K-line data (open, high, low, close prices, trading volume, etc.). I can query recent K-line data for a specific stock or for multiple stocks.\n\nWould you like me to:\n1. Query K-line data for a specific stock (please provide the stock code)?\n2. Query recent K-line data for multiple stocks (I can show examples)?\n3. Or are you looking for something else related to K-line data?\n\nPlease let me know which option you'd prefer or provide more details about what you're looking for.`\n2025-07-07 11:14:33 - sql_agent_modular - ERROR - 错误堆栈: Traceback (most recent call last):\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 1359, in _iter_next_step\n    output = self._action_agent.plan(\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 462, in plan\n    for chunk in self.runnable.stream(inputs, config={\"callbacks\": callbacks}):\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3262, in stream\n    yield from self.transform(iter([input]), config, **kwargs)\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3249, in transform\n    yield from self._transform_stream_with_config(\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 2056, in _transform_stream_with_config\n    chunk: Output = context.run(next, iterator)  # type: ignore\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3212, in _transform\n    yield from final_pipeline\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 1290, in transform\n    yield from self.stream(final, config, **kwargs)\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 855, in stream\n    yield self.invoke(input, config, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\output_parsers\\base.py\", line 183, in invoke\n    return self._call_with_config(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 1786, in _call_with_config\n    context.run(\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\runnables\\config.py\", line 398, in call_func_with_variable_args\n    return func(input, **kwargs)  # type: ignore[call-arg]\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\output_parsers\\base.py\", line 184, in <lambda>\n    lambda inner_input: self.parse_result(\n                        ^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain_core\\output_parsers\\base.py\", line 237, in parse_result\n    return self.parse(result[0].text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\agents\\output_parsers\\react_single_input.py\", line 75, in parse\n    raise OutputParserException(\nlangchain_core.exceptions.OutputParserException: Could not parse LLM output: `The `tu_daily_detail` table contains all the necessary fields for K-line data (open, high, low, close prices, trading volume, etc.). I can query recent K-line data for a specific stock or for multiple stocks.\n\nWould you like me to:\n1. Query K-line data for a specific stock (please provide the stock code)?\n2. Query recent K-line data for multiple stocks (I can show examples)?\n3. Or are you looking for something else related to K-line data?\n\nPlease let me know which option you'd prefer or provide more details about what you're looking for.`\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\agents\\sql_agent_modular.py\", line 834, in _execute_llm_query\n    result = self.agent.invoke({\"input\": enhanced_question})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\chains\\base.py\", line 163, in invoke\n    raise e\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\chains\\base.py\", line 153, in invoke\n    self._call(inputs, run_manager=run_manager)\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 1625, in _call\n    next_step_output = self._take_next_step(\n                       ^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 1333, in _take_next_step\n    for a in self._iter_next_step(\n             ^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 1370, in _iter_next_step\n    raise ValueError(\nValueError: An output parsing error occurred. In order to pass this error back to the agent and have it try again, pass `handle_parsing_errors=True` to the AgentExecutor. This is the error: Could not parse LLM output: `The `tu_daily_detail` table contains all the necessary fields for K-line data (open, high, low, close prices, trading volume, etc.). I can query recent K-line data for a specific stock or for multiple stocks.\n\nWould you like me to:\n1. Query K-line data for a specific stock (please provide the stock code)?\n2. Query recent K-line data for multiple stocks (I can show examples)?\n3. Or are you looking for something else related to K-line data?\n\nPlease let me know which option you'd prefer or provide more details about what you're looking for.`\n\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-错误用例\n测试名称: 股票简称\n查询语句: 茅台的K线\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 茅台的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 茅台的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:33 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:14:33 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:14:33 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:14:33 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：贵州茅台\n2025-07-07 11:14:33 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-错误用例\n测试名称: 无时间范围\n查询语句: 贵州茅台的K线\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:33 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:33 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-错误用例\n测试名称: 不存在的股票\n查询语句: 不存在股票的K线\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 不存在股票的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 不存在股票的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:33 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:33 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-错误用例\n测试名称: 无效月份\n查询语句: 贵州茅台13月的K线\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台13月的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台13月的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:14:33 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:14:33 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.4 K线查询-错误用例\n测试名称: 无效季度\n查询语句: 中国平安2025年第五季度的K线\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 中国平安2025年第五季度的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安2025年第五季度的K线\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: K线查询\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:14:33 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:14:33 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 年第五季度\n2025-07-07 11:14:33 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:14:33 - error_handler - ERROR - [MISSING_REQUIRED_DATE_RANGE] 此查询需要指定日期范围\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名\n测试名称: 涨幅前10\n查询语句: 今天涨幅最大的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 今天涨幅最大的前10只股票\n2025-07-07 11:14:33 - date_intelligence - INFO - 日期智能解析: '今天涨幅最大的前10只股票' -> '2025-07-04涨幅最大的前10只股票'\n2025-07-07 11:14:33 - date_intelligence - INFO - 解析详情: 将'今天'解析为当前时间点: 2025-07-04\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-04涨幅最大的前10只股票\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: 涨跌幅排名\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:14:33 - parameter_extractor - INFO - 数量限制: 10\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名\n测试名称: 跌幅前10\n查询语句: 今日跌幅最大的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 今日跌幅最大的前10只股票\n2025-07-07 11:14:33 - date_intelligence - INFO - 日期智能解析: '今日跌幅最大的前10只股票' -> '2025-07-04跌幅最大的前10只股票'\n2025-07-07 11:14:33 - date_intelligence - INFO - 解析详情: 将'今日'解析为当前时间点: 2025-07-04\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-04跌幅最大的前10只股票\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: 涨跌幅排名\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:14:33 - parameter_extractor - INFO - 数量限制: 10\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名\n测试名称: 指定日期涨幅\n查询语句: 20250627涨幅前10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 20250627涨幅前10\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 20250627涨幅前10\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 匹配到快速查询模板: 涨跌幅排名\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到日期: 2025-06-27\n2025-07-07 11:14:33 - parameter_extractor - INFO - 数量限制: 10\n2025-07-07 11:14:33 - parameter_extractor - INFO - 提取到报告期: 20250627\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名\n测试名称: 默认涨幅排名\n查询语句: 涨幅排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 收到查询请求: 涨幅排名\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 日期智能处理后的查询: 涨幅排名\n2025-07-07 11:14:33 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:14:33 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 涨幅排名\n2025-07-07 11:14:33 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:33 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for \"涨幅排名\" (price increase ranking) would likely be `tu_daily_detail` which probably contains daily stock price information. I should check its schema first.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `pct_chg` (percentage change) column which can be used to calculate price increase rankings. I'll query the top 10 stocks with the highest percentage increase for the most recent trading date.\n\nFirst, I need to find the most recent trading date in the database.\n\nAction: sql_db_query\nAction Input: SELECT MAX(trade_date) AS latest_date FROM tu_daily_detail\u001b[0m\u001b[36;1m\u001b[1;3m[(datetime.date(2025, 7, 4),)]\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名\n测试名称: 跌幅最大\n查询语句: 跌幅最大的股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:14:49 - sql_agent_modular - INFO - 收到查询请求: 跌幅最大的股票\n2025-07-07 11:14:49 - sql_agent_modular - INFO - 日期智能处理后的查询: 跌幅最大的股票\n2025-07-07 11:14:49 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:14:49 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 跌幅最大\n2025-07-07 11:14:49 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 股票\n2025-07-07 11:14:49 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:14:49 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for finding stocks with the biggest drops would likely be `tu_daily_detail` which probably contains daily stock price information.\n\nLet me check the schema of this table to understand what columns are available for querying.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `pct_chg` column which shows the percentage change in stock price. To find stocks with the biggest drops, I should query for records with the lowest `pct_chg` values.\n\nI'll create a query to get the top 10 stocks with the biggest drops (most negative percentage changes) along with their trade dates and stock codes. I'll order by `pct_chg` in ascending order to get the biggest drops first.\n\nFirst, let me double-check the query with the query checker.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, pct_chg FROM tu_daily_detail ORDER BY pct_chg ASC LIMIT 10\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here is the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, pct_chg FROM tu_daily_detail ORDER BY pct_chg ASC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-边界测试\n测试名称: 中文数字-二十\n查询语句: 涨幅前二十\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:15:13 - sql_agent_modular - INFO - 收到查询请求: 涨幅前二十\n2025-07-07 11:15:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 涨幅前二十\n2025-07-07 11:15:13 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:15:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 二十\n2025-07-07 11:15:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 涨幅前二十\n2025-07-07 11:15:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:15:13 - parameter_extractor - INFO - 数量限制: 20\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for stock price changes (\"涨幅\") would likely be `tu_daily_detail` which probably contains daily stock trading details including price changes.\n\nLet me check the schema of this table to understand what columns are available for querying price changes.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mI can see the `tu_daily_detail` table has a `pct_chg` column which represents the percentage change in stock price (\"涨跌幅\"). To find the top 20 stocks with the highest price increase, I should query this table, ordering by `pct_chg` in descending order and limiting to 20 results.\n\nFirst, I'll check if my query is correct before executing it.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, pct_chg FROM tu_daily_detail ORDER BY pct_chg DESC LIMIT 20\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here's the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, pct_chg FROM tu_daily_detail ORDER BY pct_chg DESC LIMIT 20\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-边界测试\n测试名称: 中文数字-五\n查询语句: 跌幅最大的前五只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:15:36 - sql_agent_modular - INFO - 收到查询请求: 跌幅最大的前五只股票\n2025-07-07 11:15:37 - sql_agent_modular - INFO - 日期智能处理后的查询: 跌幅最大的前五只股票\n2025-07-07 11:15:37 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:15:37 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 前五只股票\n2025-07-07 11:15:37 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:15:37 - parameter_extractor - INFO - 数量限制: 5\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for finding stock price changes would likely be `tu_daily_detail` which probably contains daily trading details including price changes. I should check its schema first.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `pct_chg` (percentage change) field which can be used to find stocks with the largest drops. I need to query for the top 5 stocks with the lowest percentage change (most negative values) in the most recent trading date.\n\nFirst, I should find the most recent trading date in the database to ensure I'm looking at current data.\n\nAction: sql_db_query\nAction Input: SELECT MAX(trade_date) AS latest_date FROM tu_daily_detail\u001b[0m\u001b[36;1m\u001b[1;3m[(datetime.date(2025, 7, 4),)]\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-边界测试\n测试名称: 中文数字-一百\n查询语句: 涨幅前一百名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:15:56 - sql_agent_modular - INFO - 收到查询请求: 涨幅前一百名\n2025-07-07 11:15:56 - sql_agent_modular - INFO - 日期智能处理后的查询: 涨幅前一百名\n2025-07-07 11:15:56 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:15:56 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 涨幅前一百名\n2025-07-07 11:15:56 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:15:56 - parameter_extractor - INFO - 数量限制: 100\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for finding stock price increases would likely be `tu_daily_detail` which probably contains daily stock price data. I should check its schema to understand what columns are available.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `pct_chg` (percentage change) column which can be used to find stocks with the highest price increases. I need to query the top 100 stocks by percentage change, limiting to the most recent trading date.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, pct_chg FROM tu_daily_detail WHERE trade_date = (SELECT MAX(trade_date) FROM tu_daily_detail) ORDER BY pct_chg DESC LIMIT 100\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here's the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, pct_chg FROM tu_daily_detail WHERE trade_date = (SELECT MAX(trade_date) FROM tu_daily_detail) ORDER BY pct_chg DESC LIMIT 100\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-边界测试\n测试名称: 昨天涨幅\n查询语句: 昨天涨幅排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:16:23 - sql_agent_modular - INFO - 收到查询请求: 昨天涨幅排名\n2025-07-07 11:16:23 - date_intelligence - INFO - 日期智能解析: '昨天涨幅排名' -> '2025-07-03涨幅排名'\n2025-07-07 11:16:23 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:16:23 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-03涨幅排名\n2025-07-07 11:16:23 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:16:23 - date_intelligence - INFO - 日期智能解析: '昨天涨幅排名' -> '2025-07-03涨幅排名'\n2025-07-07 11:16:23 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:16:23 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 2025-07-03涨幅排名\n2025-07-07 11:16:23 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:16:23 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:16:23 - parameter_extractor - INFO - 数量限制: 2025\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for stock price changes (涨幅) would likely be `tu_daily_detail` which probably contains daily stock trading details including price changes.\n\nLet me check the schema of this table to understand what columns are available.\n\nAction: sql_db_schema\nAction Input: \"tu_daily_detail\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mI can see that the `tu_daily_detail` table contains the `pct_chg` column which represents the percentage change (涨幅) of stock prices. To get the ranking of stock price changes for 2025-07-03, I need to query this table filtering by the trade_date and ordering by pct_chg in descending order.\n\nLet me first check if the query is correct before executing it.\n\nAction: sql_db_query_checker\nAction Input: \"SELECT ts_code, pct_chg FROM tu_daily_detail WHERE trade_date = '2025-07-03' ORDER BY pct_chg DESC LIMIT 10\"\u001b[0m\u001b[36;1m\u001b[1;3mThe original query appears to be correct. Here it is reproduced:\n\n```sql\nSELECT ts_code, pct_chg FROM tu_daily_detail WHERE trade_date = '2025-07-03' ORDER BY pct_chg DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-边界测试\n测试名称: 指定日期跌幅\n查询语句: 2025-06-27跌幅排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:16:49 - sql_agent_modular - INFO - 收到查询请求: 2025-06-27跌幅排名\n2025-07-07 11:16:49 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-06-27跌幅排名\n2025-07-07 11:16:49 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:16:49 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 跌幅排名\n2025-07-07 11:16:49 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 2025-06-27跌幅排名\n2025-07-07 11:16:49 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:16:49 - parameter_extractor - INFO - 提取到日期: 2025-06-27\n2025-07-07 11:16:49 - parameter_extractor - INFO - 数量限制: 2025\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for stock price changes would likely be `tu_daily_detail` which probably contains daily stock trading details including price changes.\n\nLet me check the schema of this table to understand what columns are available for querying.\n\nAction: sql_db_schema\nAction Input: \"tu_daily_detail\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the necessary information about stock price changes (`pct_chg` for percentage change) and trade dates. To find the stocks with the biggest drops on 2025-06-27, I should query for stocks on that date, ordered by their percentage change in ascending order (since negative values indicate drops).\n\nFirst, let me check if there's any data for 2025-06-27 since it's a future date.\n\nAction: sql_db_query\nAction Input: \"SELECT COUNT(*) AS count FROM tu_daily_detail WHERE trade_date = '2025-06-27'\"\u001b[0m\u001b[36;1m\u001b[1;3m[(5405,)]\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-边界测试\n测试名称: 上个交易日\n查询语句: 上个交易日涨幅前10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 收到查询请求: 上个交易日涨幅前10\n2025-07-07 11:17:08 - date_intelligence - INFO - 日期智能解析: '上个交易日涨幅前10' -> '2025-07-03涨幅前10'\n2025-07-07 11:17:08 - date_intelligence - INFO - 解析详情: 将'上个交易日'解析为相对时间点: 2025-07-03\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-03涨幅前10\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 匹配到快速查询模板: 涨跌幅排名\n2025-07-07 11:17:08 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:17:08 - parameter_extractor - INFO - 数量限制: 10\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-错误用例\n测试名称: 个股涨幅排名\n查询语句: 贵州茅台涨幅排名\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台涨幅排名\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台涨幅排名\n2025-07-07 11:17:08 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:17:08 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:17:08 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:17:08 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:17:08 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:17:08 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:17:08 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:17:08 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mI need to find the table that contains stock price change information for specific stocks like 贵州茅台 (600519.SH). The most likely tables are `tu_daily_detail` or `tu_daily_basic`. I should check their schemas first.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail, tu_daily_basic\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the daily price change information (`pct_chg` column) which is what we need to calculate the stock's performance ranking. I should query this table for 贵州茅台 (600519.SH) and order by date to see its performance changes.\n\nAction: sql_db_query_checker\nAction Input: SELECT trade_date, pct_chg FROM tu_daily_detail WHERE ts_code = '600519.SH' ORDER BY trade_date DESC LIMIT 10\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here is the reproduced original query:\n\n```sql\nSELECT trade_date, pct_chg FROM tu_daily_detail WHERE ts_code = '600519.SH' ORDER BY trade_date DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-错误用例\n测试名称: 无效数量-0\n查询语句: 涨幅前0只股票\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:17:30 - sql_agent_modular - INFO - 收到查询请求: 涨幅前0只股票\n2025-07-07 11:17:30 - sql_agent_modular - INFO - 日期智能处理后的查询: 涨幅前0只股票\n2025-07-07 11:17:30 - sql_agent_modular - INFO - 匹配到快速查询模板: 涨跌幅排名\n2025-07-07 11:17:30 - parameter_extractor - INFO - 数量限制: 10\n2025-07-07 11:17:30 - sql_agent_modular - INFO - 查询 '涨跌幅排名' 未指定日期，使用最新交易日\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.5 涨跌幅排名-错误用例\n测试名称: 数量过大\n查询语句: 涨幅前1000只股票\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 收到查询请求: 涨幅前1000只股票\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 日期智能处理后的查询: 涨幅前1000只股票\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 匹配到快速查询模板: 涨跌幅排名\n2025-07-07 11:17:31 - parameter_extractor - INFO - 数量限制: 1000\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 查询 '涨跌幅排名' 未指定日期，使用最新交易日\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名\n测试名称: 总市值前20\n查询语句: 总市值最大的前20只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 收到查询请求: 总市值最大的前20只股票\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 日期智能处理后的查询: 总市值最大的前20只股票\n2025-07-07 11:17:31 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:17:32 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名\n测试名称: 流通市值前10\n查询语句: 流通市值最大的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:32 - sql_agent_modular - INFO - 收到查询请求: 流通市值最大的前10只股票\n2025-07-07 11:17:32 - sql_agent_modular - INFO - 日期智能处理后的查询: 流通市值最大的前10只股票\n2025-07-07 11:17:32 - sql_agent_modular - INFO - 匹配到快速查询模板: 流通市值排名\n2025-07-07 11:17:32 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:17:32 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 流通市值最大\n2025-07-07 11:17:32 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 只股票\n2025-07-07 11:17:32 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 前10只股票\n2025-07-07 11:17:32 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:17:32 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for stock market capitalization would likely be `tu_daily_basic` or `tu_stock_basic`. I'll check the schema of both tables to find the circulation market value field.\n\nAction: sql_db_schema\nAction Input: \"tu_daily_basic, tu_stock_basic\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_stock_basic (\n\tid BIGINT NOT NULL COMMENT '主键ID' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\tsymbol VARCHAR(10) COMMENT '股票代码', \n\tname VARCHAR(50) COMMENT '股票名称', \n\tarea VARCHAR(50) COMMENT '地域', \n\tindustry VARCHAR(50) COMMENT '所属行业', \n\tfullname VARCHAR(100) COMMENT '股票全称', \n\tenname VARCHAR(200) COMMENT '英文全称', \n\tcnspell VARCHAR(50) COMMENT '拼音缩写', \n\tmarket VARCHAR(20) COMMENT '市场类型（主板/创业板/科创板/CDR/北交所）', \n\texchange VARCHAR(10) COMMENT '交易所代码', \n\tcurr_type VARCHAR(10) COMMENT '交易货币', \n\tlist_status VARCHAR(5) COMMENT '上市状态 L上市 D退市 P暂停上市', \n\tlist_date VARCHAR(8) COMMENT '上市日期', \n\tdelist_date VARCHAR(8) COMMENT '退市日期', \n\tis_hs VARCHAR(5) COMMENT '是否沪深港通标的，N否 H沪股通 S深股通', \n\tact_name VARCHAR(100) COMMENT '实控人名称', \n\tact_ent_type VARCHAR(50) COMMENT '实控人企业性质', \n\tcreate_time TIMESTAMP NULL COMMENT '创建时间' DEFAULT CURRENT_TIMESTAMP, \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='股票基础信息表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_stock_basic table:\nid\tts_code\tsymbol\tname\tarea\tindustry\tfullname\tenname\tcnspell\tmarket\texchange\tcurr_type\tlist_status\tlist_date\tdelist_date\tis_hs\tact_name\tact_ent_type\tcreate_time\tupdate_time\n1\t000001.SZ\t000001\t平安银行\t深圳\t银行\t平安银行股份有限公司\tPing An Bank Co., Ltd.\tpayh\t主板\tSZSE\tCNY\tL\t19910403\tNone\tS\t无实际控制人\t无\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n2\t000002.SZ\t000002\t万科A\t深圳\t全国地产\t万科企业股份有限公司\tChina Vanke Co.,Ltd.\twka\t主板\tSZSE\tCNY\tL\t19910129\tNone\tS\t深圳市人民政府国有资产监督管理委员会\t地方国企\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n3\t000004.SZ\t000004\t*ST国华\t深圳\t软件服务\t深圳国华网安科技股份有限公司\tShenzhen Guohua Network Security Technology Co., Ltd.\tstgh\t主板\tSZSE\tCNY\tL\t19910114\tNone\tN\t李映彤\t民营企业\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n*/\u001b[0m\u001b[32;1m\u001b[1;3mI can see that the `tu_daily_basic` table contains the `circ_mv` (circulation market value) field that we need. To get the top 10 stocks with the largest circulation market value, I should query this table, join it with `tu_stock_basic` to get the stock names, and order by `circ_mv` in descending order. I'll use the most recent trading date available.\n\nFirst, I'll check what the most recent trading date is in the database.\n\nAction: sql_db_query\nAction Input: \"SELECT MAX(trade_date) AS latest_date FROM tu_daily_basic\"\u001b[0m\u001b[36;1m\u001b[1;3m[('20250704',)]\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名\n测试名称: 市值前50\n查询语句: 市值排名前50\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:53 - sql_agent_modular - INFO - 收到查询请求: 市值排名前50\n2025-07-07 11:17:53 - sql_agent_modular - INFO - 日期智能处理后的查询: 市值排名前50\n2025-07-07 11:17:53 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:17:54 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名\n测试名称: 市值前20名\n查询语句: 市值前20名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:54 - sql_agent_modular - INFO - 收到查询请求: 市值前20名\n2025-07-07 11:17:54 - sql_agent_modular - INFO - 日期智能处理后的查询: 市值前20名\n2025-07-07 11:17:54 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:17:56 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-默认前10\n测试名称: 总市值默认\n查询语句: 总市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:56 - sql_agent_modular - INFO - 收到查询请求: 总市值排名\n2025-07-07 11:17:56 - sql_agent_modular - INFO - 日期智能处理后的查询: 总市值排名\n2025-07-07 11:17:56 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:17:57 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-默认前10\n测试名称: 市值默认\n查询语句: 市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:57 - sql_agent_modular - INFO - 收到查询请求: 市值排名\n2025-07-07 11:17:57 - sql_agent_modular - INFO - 日期智能处理后的查询: 市值排名\n2025-07-07 11:17:57 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:17:59 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-默认前10\n测试名称: 流通市值默认\n查询语句: 流通市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:17:59 - sql_agent_modular - INFO - 收到查询请求: 流通市值排名\n2025-07-07 11:17:59 - sql_agent_modular - INFO - 日期智能处理后的查询: 流通市值排名\n2025-07-07 11:17:59 - sql_agent_modular - INFO - 匹配到快速查询模板: 流通市值排名\n2025-07-07 11:17:59 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:17:59 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 流通市值排名\n2025-07-07 11:17:59 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:17:59 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for \"流通市值排名\" (circulating market value ranking) would likely be `tu_daily_basic` or `tu_stock_basic` since these typically contain basic stock information including market values.\n\nLet me check the schema of these tables to find the relevant columns.\n\nAction: sql_db_schema\nAction Input: tu_daily_basic, tu_stock_basic\n\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_stock_basic (\n\tid BIGINT NOT NULL COMMENT '主键ID' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\tsymbol VARCHAR(10) COMMENT '股票代码', \n\tname VARCHAR(50) COMMENT '股票名称', \n\tarea VARCHAR(50) COMMENT '地域', \n\tindustry VARCHAR(50) COMMENT '所属行业', \n\tfullname VARCHAR(100) COMMENT '股票全称', \n\tenname VARCHAR(200) COMMENT '英文全称', \n\tcnspell VARCHAR(50) COMMENT '拼音缩写', \n\tmarket VARCHAR(20) COMMENT '市场类型（主板/创业板/科创板/CDR/北交所）', \n\texchange VARCHAR(10) COMMENT '交易所代码', \n\tcurr_type VARCHAR(10) COMMENT '交易货币', \n\tlist_status VARCHAR(5) COMMENT '上市状态 L上市 D退市 P暂停上市', \n\tlist_date VARCHAR(8) COMMENT '上市日期', \n\tdelist_date VARCHAR(8) COMMENT '退市日期', \n\tis_hs VARCHAR(5) COMMENT '是否沪深港通标的，N否 H沪股通 S深股通', \n\tact_name VARCHAR(100) COMMENT '实控人名称', \n\tact_ent_type VARCHAR(50) COMMENT '实控人企业性质', \n\tcreate_time TIMESTAMP NULL COMMENT '创建时间' DEFAULT CURRENT_TIMESTAMP, \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='股票基础信息表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_stock_basic table:\nid\tts_code\tsymbol\tname\tarea\tindustry\tfullname\tenname\tcnspell\tmarket\texchange\tcurr_type\tlist_status\tlist_date\tdelist_date\tis_hs\tact_name\tact_ent_type\tcreate_time\tupdate_time\n1\t000001.SZ\t000001\t平安银行\t深圳\t银行\t平安银行股份有限公司\tPing An Bank Co., Ltd.\tpayh\t主板\tSZSE\tCNY\tL\t19910403\tNone\tS\t无实际控制人\t无\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n2\t000002.SZ\t000002\t万科A\t深圳\t全国地产\t万科企业股份有限公司\tChina Vanke Co.,Ltd.\twka\t主板\tSZSE\tCNY\tL\t19910129\tNone\tS\t深圳市人民政府国有资产监督管理委员会\t地方国企\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n3\t000004.SZ\t000004\t*ST国华\t深圳\t软件服务\t深圳国华网安科技股份有限公司\tShenzhen Guohua Network Security Technology Co., Ltd.\tstgh\t主板\tSZSE\tCNY\tL\t19910114\tNone\tN\t李映彤\t民营企业\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_basic` table contains the `circ_mv` (circulating market value) column which is exactly what we need for the ranking. We should query this table to get the latest circulating market values and rank them.\n\nFirst, let's find the most recent trade date available in the database to get the latest data.\n\nAction: sql_db_query\nAction Input: SELECT DISTINCT trade_date FROM tu_daily_basic ORDER BY trade_date DESC LIMIT 1\n\u001b[0m\u001b[36;1m\u001b[1;3m[('20250704',)]\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-默认前10\n测试名称: 市值排行默认\n查询语句: 市值排行\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:19 - sql_agent_modular - INFO - 收到查询请求: 市值排行\n2025-07-07 11:18:19 - sql_agent_modular - INFO - 日期智能处理后的查询: 市值排行\n2025-07-07 11:18:19 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:18:20 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-TOP格式\n测试名称: TOP10格式\n查询语句: 市值TOP10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:20 - sql_agent_modular - INFO - 收到查询请求: 市值TOP10\n2025-07-07 11:18:20 - sql_agent_modular - INFO - 日期智能处理后的查询: 市值TOP10\n2025-07-07 11:18:20 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:18:22 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-TOP格式\n测试名称: 总市值TOP20\n查询语句: 总市值TOP20\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:22 - sql_agent_modular - INFO - 收到查询请求: 总市值TOP20\n2025-07-07 11:18:22 - sql_agent_modular - INFO - 日期智能处理后的查询: 总市值TOP20\n2025-07-07 11:18:22 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:18:23 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-TOP格式\n测试名称: 流通市值TOP5\n查询语句: 流通市值TOP5\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:23 - sql_agent_modular - INFO - 收到查询请求: 流通市值TOP5\n2025-07-07 11:18:23 - sql_agent_modular - INFO - 日期智能处理后的查询: 流通市值TOP5\n2025-07-07 11:18:23 - sql_agent_modular - INFO - 匹配到快速查询模板: 流通市值排名\n2025-07-07 11:18:23 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:18:23 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 流通市值TOP5\n2025-07-07 11:18:23 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:18:23 - parameter_extractor - INFO - 数量限制: 5\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for market capitalization (流通市值) would likely be `tu_daily_basic` or `tu_stock_basic`. I'll check the schema of both tables to find the correct column.\n\nAction: sql_db_schema\nAction Input: tu_daily_basic, tu_stock_basic\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_stock_basic (\n\tid BIGINT NOT NULL COMMENT '主键ID' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\tsymbol VARCHAR(10) COMMENT '股票代码', \n\tname VARCHAR(50) COMMENT '股票名称', \n\tarea VARCHAR(50) COMMENT '地域', \n\tindustry VARCHAR(50) COMMENT '所属行业', \n\tfullname VARCHAR(100) COMMENT '股票全称', \n\tenname VARCHAR(200) COMMENT '英文全称', \n\tcnspell VARCHAR(50) COMMENT '拼音缩写', \n\tmarket VARCHAR(20) COMMENT '市场类型（主板/创业板/科创板/CDR/北交所）', \n\texchange VARCHAR(10) COMMENT '交易所代码', \n\tcurr_type VARCHAR(10) COMMENT '交易货币', \n\tlist_status VARCHAR(5) COMMENT '上市状态 L上市 D退市 P暂停上市', \n\tlist_date VARCHAR(8) COMMENT '上市日期', \n\tdelist_date VARCHAR(8) COMMENT '退市日期', \n\tis_hs VARCHAR(5) COMMENT '是否沪深港通标的，N否 H沪股通 S深股通', \n\tact_name VARCHAR(100) COMMENT '实控人名称', \n\tact_ent_type VARCHAR(50) COMMENT '实控人企业性质', \n\tcreate_time TIMESTAMP NULL COMMENT '创建时间' DEFAULT CURRENT_TIMESTAMP, \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='股票基础信息表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_stock_basic table:\nid\tts_code\tsymbol\tname\tarea\tindustry\tfullname\tenname\tcnspell\tmarket\texchange\tcurr_type\tlist_status\tlist_date\tdelist_date\tis_hs\tact_name\tact_ent_type\tcreate_time\tupdate_time\n1\t000001.SZ\t000001\t平安银行\t深圳\t银行\t平安银行股份有限公司\tPing An Bank Co., Ltd.\tpayh\t主板\tSZSE\tCNY\tL\t19910403\tNone\tS\t无实际控制人\t无\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n2\t000002.SZ\t000002\t万科A\t深圳\t全国地产\t万科企业股份有限公司\tChina Vanke Co.,Ltd.\twka\t主板\tSZSE\tCNY\tL\t19910129\tNone\tS\t深圳市人民政府国有资产监督管理委员会\t地方国企\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n3\t000004.SZ\t000004\t*ST国华\t深圳\t软件服务\t深圳国华网安科技股份有限公司\tShenzhen Guohua Network Security Technology Co., Ltd.\tstgh\t主板\tSZSE\tCNY\tL\t19910114\tNone\tN\t李映彤\t民营企业\t2025-06-11 05:58:50\t2025-07-04 15:15:10\n*/\u001b[0m\u001b[32;1m\u001b[1;3mI can see that the `tu_daily_basic` table contains the `circ_mv` column which represents circulating market value (流通市值). To get the top 5 stocks by circulating market value, I should query this table, join with `tu_stock_basic` to get the stock names, and order by `circ_mv` in descending order.\n\nAction: sql_db_query_checker\nAction Input: SELECT s.name, d.ts_code, d.circ_mv FROM tu_daily_basic d JOIN tu_stock_basic s ON d.ts_code = s.ts_code ORDER BY d.circ_mv DESC LIMIT 5\u001b[0m\u001b[36;1m\u001b[1;3mThe original query appears to be correct. Here it is reproduced:\n\n```sql\nSELECT s.name, d.ts_code, d.circ_mv FROM tu_daily_basic d JOIN tu_stock_basic s ON d.ts_code = s.ts_code ORDER BY d.circ_mv DESC LIMIT 5\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-TOP格式\n测试名称: A股市值TOP15\n查询语句: A股市值TOP15\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:50 - sql_agent_modular - INFO - 收到查询请求: A股市值TOP15\n2025-07-07 11:18:50 - sql_agent_modular - INFO - 日期智能处理后的查询: A股市值TOP15\n2025-07-07 11:18:50 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:18:52 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-时间指定\n测试名称: 今天市值\n查询语句: 今天的市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:52 - sql_agent_modular - INFO - 收到查询请求: 今天的市值排名\n2025-07-07 11:18:52 - date_intelligence - INFO - 日期智能解析: '今天的市值排名' -> '2025-07-04的市值排名'\n2025-07-07 11:18:52 - date_intelligence - INFO - 解析详情: 将'今天'解析为当前时间点: 2025-07-04\n2025-07-07 11:18:52 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-04的市值排名\n2025-07-07 11:18:52 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:18:54 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-时间指定\n测试名称: 最新市值\n查询语句: 最新市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:54 - sql_agent_modular - INFO - 收到查询请求: 最新市值排名\n2025-07-07 11:18:54 - date_intelligence - INFO - 日期智能解析: '最新市值排名' -> '2025-07-04市值排名'\n2025-07-07 11:18:54 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:18:54 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-04市值排名\n2025-07-07 11:18:54 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:18:55 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-时间指定\n测试名称: 昨天流通市值\n查询语句: 昨天流通市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:18:55 - sql_agent_modular - INFO - 收到查询请求: 昨天流通市值排名\n2025-07-07 11:18:55 - date_intelligence - INFO - 日期智能解析: '昨天流通市值排名' -> '2025-07-03流通市值排名'\n2025-07-07 11:18:55 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:18:55 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-03流通市值排名\n2025-07-07 11:18:55 - sql_agent_modular - INFO - 匹配到快速查询模板: 流通市值排名\n2025-07-07 11:18:55 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:18:55 - date_intelligence - INFO - 日期智能解析: '昨天流通市值排名' -> '2025-07-03流通市值排名'\n2025-07-07 11:18:55 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:18:55 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 2025-07-03流通市值排名\n2025-07-07 11:18:55 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:18:55 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:18:55 - parameter_extractor - INFO - 数量限制: 2025\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for querying market capitalization on a specific date would likely be `tu_daily_basic` or `tu_daily_detail`. I'll check the schema of these tables to find the relevant columns.\n\nAction: sql_db_schema\nAction Input: \"tu_daily_basic, tu_daily_detail\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_basic` table contains the `circ_mv` (circulation market value) column which is what we need for the ranking. We'll query this table for records on 2025-07-03, ordering by `circ_mv` in descending order to get the ranking.\n\nAction: sql_db_query_checker\nAction Input: \"SELECT ts_code, circ_mv FROM tu_daily_basic WHERE trade_date = '20250703' ORDER BY circ_mv DESC LIMIT 10\"\u001b[0m\u001b[36;1m\u001b[1;3mThe original query appears to be correct. Here it is reproduced:\n\n```sql\nSELECT ts_code, circ_mv FROM tu_daily_basic WHERE trade_date = '20250703' ORDER BY circ_mv DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.6 市值排名-时间指定\n测试名称: 指定日期市值\n查询语句: 2025-07-01市值排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:20 - sql_agent_modular - INFO - 收到查询请求: 2025-07-01市值排名\n2025-07-07 11:19:20 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-01市值排名\n2025-07-07 11:19:20 - sql_agent_modular - INFO - 匹配到快速查询模板: 总市值排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名\n测试名称: 成交额前10\n查询语句: 成交额最大的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额最大的前10只股票\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额最大的前10只股票\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名\n测试名称: 成交额前20\n查询语句: 成交额排名前20\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额排名前20\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额排名前20\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名\n测试名称: 成交额前15\n查询语句: 成交额前15\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额前15\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额前15\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名\n测试名称: 昨天成交额前15\n查询语句: 昨天成交额最大的前15只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 昨天成交额最大的前15只股票\n2025-07-07 11:19:21 - date_intelligence - INFO - 日期智能解析: '昨天成交额最大的前15只股票' -> '2025-07-03成交额最大的前15只股票'\n2025-07-07 11:19:21 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-03成交额最大的前15只股票\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名-默认前10\n测试名称: 成交额默认\n查询语句: 成交额排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名-默认前10\n测试名称: 成交额排行默认\n查询语句: 成交额排行\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额排行\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额排行\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名-默认前10\n测试名称: A股成交额默认\n查询语句: A股成交额排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: A股成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: A股成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名-TOP格式\n测试名称: 成交额TOP10\n查询语句: 成交额TOP10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额TOP10\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额TOP10\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名-TOP格式\n测试名称: 成交额TOP20\n查询语句: 成交额TOP20\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额TOP20\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额TOP20\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.7 成交额排名-TOP格式\n测试名称: 成交额TOP5\n查询语句: 成交额TOP5\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交额TOP5\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交额TOP5\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交额排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名\n测试名称: 成交量前10\n查询语句: 成交量最大的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 收到查询请求: 成交量最大的前10只股票\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交量最大的前10只股票\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:19:21 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:19:21 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量最大\n2025-07-07 11:19:21 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:19:21 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for stock trading volume would likely be `tu_daily_detail` or `tu_daily_basic`. I'll check the schema of `tu_daily_detail` first since it sounds like it would contain daily trading details.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `vol` (volume) column which represents trading volume in lots (手). To find the top 10 stocks with the highest trading volume, I need to query this table, sum the volumes by stock code, and order by the total volume in descending order.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, SUM(vol) AS total_volume FROM tu_daily_detail GROUP BY ts_code ORDER BY total_volume DESC LIMIT 10\u001b[0m\u001b[36;1m\u001b[1;3mThe original query appears to be correct and doesn't contain any of the common mistakes listed. Here's the reproduced query:\n\n```sql\nSELECT ts_code, SUM(vol) AS total_volume FROM tu_daily_detail GROUP BY ts_code ORDER BY total_volume DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名\n测试名称: 成交量前20\n查询语句: 成交量排名前20\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:19:46 - sql_agent_modular - INFO - 收到查询请求: 成交量排名前20\n2025-07-07 11:19:46 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交量排名前20\n2025-07-07 11:19:46 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:19:46 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:19:46 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量排名前\n2025-07-07 11:19:46 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量排名前20\n2025-07-07 11:19:46 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:19:46 - parameter_extractor - INFO - 数量限制: 20\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for trading volume (成交量) would likely be `tu_daily_detail` or `tu_daily_basic`. I should check the schema of these tables to find the volume column.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail, tu_daily_basic\n\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `vol` column which represents trading volume (成交量) in lots (手). To get the top 20 stocks by trading volume, I should query this table, order by `vol` in descending order, and limit to 20 results.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 20\n\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here's the original query reproduced:\n\n```sql\nSELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 20\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名\n测试名称: 成交量前15\n查询语句: 成交量前15\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:20:09 - sql_agent_modular - INFO - 收到查询请求: 成交量前15\n2025-07-07 11:20:09 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交量前15\n2025-07-07 11:20:09 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:20:09 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:20:09 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量前\n2025-07-07 11:20:09 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量前15\n2025-07-07 11:20:09 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:20:09 - parameter_extractor - INFO - 数量限制: 15\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for trading volume (成交量) would likely be `tu_daily_detail` or `tu_daily_basic`. I should check the schema of these tables to find the volume column.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail, tu_daily_basic\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `vol` column which represents trading volume (成交量) in lots (手). I'll query this table to get the top 15 trading volumes, ordering by volume in descending order.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 15\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here is the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 15\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名\n测试名称: 昨天成交量前15\n查询语句: 昨天成交量最大的前15只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:20:34 - sql_agent_modular - INFO - 收到查询请求: 昨天成交量最大的前15只股票\n2025-07-07 11:20:34 - date_intelligence - INFO - 日期智能解析: '昨天成交量最大的前15只股票' -> '2025-07-03成交量最大的前15只股票'\n2025-07-07 11:20:34 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:20:34 - sql_agent_modular - INFO - 日期智能处理后的查询: 2025-07-03成交量最大的前15只股票\n2025-07-07 11:20:34 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:20:34 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:20:34 - date_intelligence - INFO - 日期智能解析: '昨天成交量最大的前15只股票' -> '2025-07-03成交量最大的前15只股票'\n2025-07-07 11:20:34 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:20:34 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 2025-07-03成交量最大\n2025-07-07 11:20:34 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 前15只股票\n2025-07-07 11:20:34 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:20:34 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:20:34 - parameter_extractor - INFO - 数量限制: 15\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for stock trading volume (成交量) would likely be `tu_daily_detail` which probably contains daily trading details for stocks.\n\nLet me check the schema of this table to find the relevant columns for date and trading volume.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mI found the relevant table `tu_daily_detail` which contains trading volume (`vol`) and trade date (`trade_date` information. Now I can construct a query to find the top 15 stocks with highest trading volume on 2025-07-03.\n\nFirst, I'll double check my query to make sure it's correct.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, vol FROM tu_daily_detail WHERE trade_date = '2025-07-03' ORDER BY vol DESC LIMIT 15\u001b[0m\u001b[36;1m\u001b[1;3mThe original query appears to be correct with no common mistakes. Here's the reproduced query:\n\n```sql\nSELECT ts_code, vol FROM tu_daily_detail WHERE trade_date = '2025-07-03' ORDER BY vol DESC LIMIT 15\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名-区分测试\n测试名称: 个股成交量查询\n查询语句: 贵州茅台的成交量\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的成交量\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的成交量\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:20:57 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:20:57 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:20:57 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:20:57 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:20:57 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:20:57 - error_handler - ERROR - [MISSING_REQUIRED_DATE] 此查询需要指定日期\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名-区分测试\n测试名称: 成交量排名查询\n查询语句: 成交量排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 收到查询请求: 成交量排名\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交量排名\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:20:57 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:20:57 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:20:57 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for trading volume (成交量) would likely be `tu_daily_detail` or `tu_daily_basic`. I should check the schema of these tables to find the volume column.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail, tu_daily_basic\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `vol` column which represents trading volume (成交量) in lots (手). To get the volume ranking, I should query this table, order by volume in descending order, and limit to 10 results.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 10\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here is the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名-区分测试\n测试名称: 个股成交量\n查询语句: 平安银行成交量\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 收到查询请求: 平安银行成交量\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行成交量\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量查询\n2025-07-07 11:21:20 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 安银行成交量\n2025-07-07 11:21:20 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:21:20 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:21:20 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:21:20 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:21:20 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:20 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:20 - error_handler - ERROR - [MISSING_REQUIRED_DATE] 此查询需要指定日期\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.8 成交量排名-区分测试\n测试名称: 成交量TOP排名\n查询语句: 成交量TOP10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 收到查询请求: 成交量TOP10\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 日期智能处理后的查询: 成交量TOP10\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 匹配到快速查询模板: 成交量排名\n2025-07-07 11:21:20 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:21:20 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 成交量TOP10\n2025-07-07 11:21:20 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:21:20 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant table for trading volume (成交量) would likely be `tu_daily_detail` or `tu_daily_basic`. I should check the schema of these tables to find the volume column.\n\nAction: sql_db_schema\nAction Input: tu_daily_detail, tu_daily_basic\n\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_daily_detail (\n\tid BIGINT NOT NULL AUTO_INCREMENT, \n\tts_code VARCHAR(255) COMMENT '证券代码', \n\ttrade_date DATE COMMENT '交易日期（YYYYMMDD格式）', \n\topen DECIMAL(10, 2) COMMENT '开盘价', \n\thigh DECIMAL(10, 2) COMMENT '最高价', \n\tlow DECIMAL(10, 2) COMMENT '最低价', \n\tclose DECIMAL(10, 2) COMMENT '收盘价', \n\tpre_close DECIMAL(10, 2) COMMENT '昨收价【除权价，前复权】', \n\t`change` DECIMAL(10, 2) COMMENT '涨跌额', \n\tpct_chg DECIMAL(10, 2) COMMENT '涨跌幅 【基于除权后的昨收计算的涨跌幅：（今收-除权昨收）/除权昨收 】', \n\tvol BIGINT COMMENT '成交量 （手）', \n\tamount DECIMAL(18, 2) COMMENT '成交额 （千元）', \n\tvwap DOUBLE, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COMMENT='A股日线行情数据表。接口：daily' DEFAULT CHARSET=utf8mb3\n\n/*\n3 rows from tu_daily_detail table:\nid\tts_code\ttrade_date\topen\thigh\tlow\tclose\tpre_close\tchange\tpct_chg\tvol\tamount\tvwap\n1\t600184.SH\t2023-12-14\t12.31\t12.39\t12.20\t12.21\t12.29\t-0.08\t-0.65\t33652\t41340.05\t12.2845744681\n2\t600185.SH\t2023-12-14\t7.79\t8.00\t7.77\t7.81\t7.65\t0.16\t2.09\t302705\t238633.29\t7.8833692374\n3\t600186.SH\t2023-12-14\t5.37\t5.44\t5.31\t5.32\t5.37\t-0.05\t-0.93\t392257\t210307.64\t5.3614757927\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_detail` table contains the `vol` column which represents trading volume (成交量) in lots (手). To get the top 10 trading volumes, I should query this table, order by `vol` in descending order, and limit to 10 results.\n\nAction: sql_db_query_checker\nAction Input: SELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 10\n\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here's the original query reproduced:\n\n```sql\nSELECT ts_code, trade_date, vol FROM tu_daily_detail ORDER BY vol DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名\n测试名称: 主力流入前10\n查询语句: 主力净流入最多的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流入最多的前10只股票\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流入最多的前10只股票\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名\n测试名称: 主力流出前10\n查询语句: 主力净流出最多的前10只股票\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流出最多的前10只股票\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流出最多的前10只股票\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流出排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名\n测试名称: 主力流入前20\n查询语句: 主力净流入排名前20\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流入排名前20\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流入排名前20\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名\n测试名称: 主力流出前15\n查询语句: 主力净流出排名前15\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流出排名前15\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流出排名前15\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流出排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名-默认前10\n测试名称: 主力流入默认\n查询语句: 主力净流入排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流入排名\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流入排名\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名-默认前10\n测试名称: 主力流入排行默认\n查询语句: 主力净流入排行\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名-默认前10\n测试名称: 主力流出默认\n查询语句: 主力净流出排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流出排名\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流出排名\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流出排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名-默认前10\n测试名称: 主力流出排行默认\n查询语句: 主力净流出排行\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 主力净流出排行\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 主力净流出排行\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流出排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名-错误用例\n测试名称: 非标准术语-机构\n查询语句: 机构资金流入排名\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 机构资金流入排名\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 机构资金流入排名\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.9 主力资金排名-错误用例\n测试名称: 非标准术语-大资金\n查询语句: 大资金流入排行\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 大资金流入排行\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 大资金流入排行\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 主力净流入排行\n2025-07-07 11:21:43 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金\n测试名称: 贵州茅台主力\n查询语句: 贵州茅台的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 的主力\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 主力资金\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金\n测试名称: 平安银行主力\n查询语句: 平安银行的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 平安银行的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金\n测试名称: 股票代码主力\n查询语句: 600519.SH的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 600519.SH的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 600519.SH的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: money_flow\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金\n测试名称: 比亚迪主力\n查询语句: 比亚迪的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 比亚迪的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 比亚迪的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 002594.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 002594.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 002594.SZ -> 002594.SZ (比亚迪)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['002594.SZ']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金\n测试名称: 万科A主力\n查询语句: 万科A的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 万科A的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-时间指定\n测试名称: 昨天主力\n查询语句: 贵州茅台昨天的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台昨天的主力资金\n2025-07-07 11:21:43 - date_intelligence - INFO - 日期智能解析: '贵州茅台昨天的主力资金' -> '贵州茅台 2025-07-03的主力资金'\n2025-07-07 11:21:43 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-07-03的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-时间指定\n测试名称: 指定日期主力\n查询语句: 平安银行2025-07-01的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 平安银行2025-07-01的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行2025-07-01的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到日期: 2025-07-01\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-时间指定\n测试名称: 今天主力\n查询语句: 万科A今天的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 万科A今天的主力资金\n2025-07-07 11:21:43 - date_intelligence - INFO - 日期智能解析: '万科A今天的主力资金' -> '万科A 2025-07-04的主力资金'\n2025-07-07 11:21:43 - date_intelligence - INFO - 解析详情: 将'今天'解析为当前时间点: 2025-07-04\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A 2025-07-04的主力资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-错误用例\n测试名称: 非标准术语-机构\n查询语句: 贵州茅台的机构资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的机构资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的机构资金\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 的机构\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 机构资金\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-错误用例\n测试名称: 非标准术语-大资金\n查询语句: 平安银行的大资金流入\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 平安银行的大资金流入\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行的大资金流入\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 的大\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 大资金流入\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 查询 '个股主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-错误用例\n测试名称: 不支持的资金类型\n查询语句: 万科A的游资\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 收到查询请求: 万科A的游资\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A的游资\n2025-07-07 11:21:43 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:21:43 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:21:43 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 游资\n2025-07-07 11:21:43 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:21:43 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant tables for querying about \"游资\" (hot money flow) for a specific stock would likely be `tu_moneyflow_dc` or `tu_moneyflow_ind_dc`. I'll check the schema of these tables to understand their structure.\n\nAction: sql_db_schema\nAction Input: \"tu_moneyflow_dc, tu_moneyflow_ind_dc\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_moneyflow_dc (\n\tid BIGINT NOT NULL COMMENT '主键ID' AUTO_INCREMENT, \n\ttrade_date DATE NOT NULL COMMENT '交易日期', \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\tname VARCHAR(50) COMMENT '股票名称', \n\tpct_change DECIMAL(10, 4) COMMENT '涨跌幅', \n\tclose DECIMAL(10, 2) COMMENT '最新价', \n\tnet_amount DECIMAL(15, 2) COMMENT '今日主力净流入额（万元）', \n\tnet_amount_rate DECIMAL(10, 4) COMMENT '今日主力净流入净占比（%%）', \n\tbuy_elg_amount DECIMAL(15, 2) COMMENT '今日超大单净流入额（万元）', \n\tbuy_elg_amount_rate DECIMAL(10, 4) COMMENT '今日超大单净流入占比（%%）', \n\tbuy_lg_amount DECIMAL(15, 2) COMMENT '今日大单净流入额（万元）', \n\tbuy_lg_amount_rate DECIMAL(10, 4) COMMENT '今日大单净流入占比（%%）', \n\tbuy_md_amount DECIMAL(15, 2) COMMENT '今日中单净流入额（万元）', \n\tbuy_md_amount_rate DECIMAL(10, 4) COMMENT '今日中单净流入占比（%%）', \n\tbuy_sm_amount DECIMAL(15, 2) COMMENT '今日小单净流入额（万元）', \n\tbuy_sm_amount_rate DECIMAL(10, 4) COMMENT '今日小单净流入占比（%%）', \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='东方财富个股资金流向数据' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_moneyflow_dc table:\nid\ttrade_date\tts_code\tname\tpct_change\tclose\tnet_amount\tnet_amount_rate\tbuy_elg_amount\tbuy_elg_amount_rate\tbuy_lg_amount\tbuy_lg_amount_rate\tbuy_md_amount\tbuy_md_amount_rate\tbuy_sm_amount\tbuy_sm_amount_rate\n1\t2025-03-28\t002639.SZ\t雪人股份\t9.9900\t8.92\t56917.45\t31.2700\t63663.57\t34.9800\t-6746.12\t-3.7100\t-32453.65\t-17.8300\t-24463.80\t-13.4400\n2\t2025-03-28\t600589.SH\t大位科技\t10.0500\t7.01\t53353.47\t29.3700\t62785.23\t34.5700\t-9431.76\t-5.1900\t-27534.00\t-15.1600\t-25819.47\t-14.2100\n3\t2025-03-28\t600126.SH\t杭钢股份\t6.1000\t10.78\t37716.47\t9.5000\t42350.04\t10.6700\t-4633.57\t-1.1700\t-22475.75\t-5.6600\t-15240.72\t-3.8400\n*/\n\n\nCREATE TABLE tu_moneyflow_ind_dc (\n\tid BIGINT NOT NULL COMMENT '主键ID' AUTO_INCREMENT, \n\ttrade_date DATE NOT NULL COMMENT '交易日期 ', \n\tcontent_type VARCHAR(20) NOT NULL COMMENT '板块分类（行业、概念、地域）', \n\tts_code VARCHAR(10) NOT NULL COMMENT '板块代码', \n\tname VARCHAR(50) COMMENT '板块名称', \n\tpct_change DECIMAL(10, 4) COMMENT '板块涨跌幅（%%）', \n\tclose DECIMAL(10, 2) COMMENT '板块最新指数', \n\tnet_amount DECIMAL(15, 2) COMMENT '今日主力净流入 净额（元）', \n\tnet_amount_rate DECIMAL(10, 4) COMMENT '今日主力净流入净占比%%', \n\tbuy_elg_amount DECIMAL(15, 2) COMMENT '今日超大单净流入 净额（元）', \n\tbuy_elg_amount_rate DECIMAL(10, 4) COMMENT '今日超大单净流入 净占比%%', \n\tbuy_lg_amount DECIMAL(15, 2) COMMENT '今日大单净流入 净额（元）', \n\tbuy_lg_amount_rate DECIMAL(10, 4) COMMENT '今日大单净流入 净占比%%', \n\tbuy_md_amount DECIMAL(15, 2) COMMENT '今日中单净流入 净额（元）', \n\tbuy_md_amount_rate DECIMAL(10, 4) COMMENT '今日中单净流入 净占比%%', \n\tbuy_sm_amount DECIMAL(15, 2) COMMENT '今日小单净流入 净额（元）', \n\tbuy_sm_amount_rate DECIMAL(10, 4) COMMENT '今日小单净流入 净占比%%', \n\tbuy_sm_amount_stock VARCHAR(50) COMMENT '今日主力净流入最大股', \n\t`rank` INTEGER COMMENT '分类排名按主力净流入倒序排列', \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='东财行业概念地域板块资金流向' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_moneyflow_ind_dc table:\nid\ttrade_date\tcontent_type\tts_code\tname\tpct_change\tclose\tnet_amount\tnet_amount_rate\tbuy_elg_amount\tbuy_elg_amount_rate\tbuy_lg_amount\tbuy_lg_amount_rate\tbuy_md_amount\tbuy_md_amount_rate\tbuy_sm_amount\tbuy_sm_amount_rate\tbuy_sm_amount_stock\trank\n1\t2025-04-09\t行业\tBK1036.DC\t半导体\t4.3800\t1304.46\t4569371648.00\t4.2900\t3845366016.00\t3.6100\t724005632.00\t0.6800\t-3066468352.00\t-2.8800\t-1191609856.00\t-1.1200\t紫光国微\t1\n2\t2025-04-09\t行业\tBK0737.DC\t软件开发\t5.2600\t991.95\t1888080640.00\t2.2300\t988311808.00\t1.1700\t899768832.00\t1.0600\t-930205184.00\t-1.1000\t-449675520.00\t-0.5300\t金山办公\t2\n3\t2025-04-09\t行业\tBK0447.DC\t互联网服务\t4.0300\t23076.13\t1488202240.00\t2.0400\t1668978944.00\t2.2900\t-180776704.00\t-0.2500\t-1464227584.00\t-2.0100\t4685056.00\t0.0100\t东方财富\t3\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_moneyflow_dc` table contains individual stock money flow data, which is what we need for 万科A (000002.SZ). I'll query this table for the most recent 10 records of money flow data for this stock.\n\nAction: sql_db_query_checker\nAction Input: \"SELECT trade_date, name, pct_change, close, buy_elg_amount, buy_elg_amount_rate, buy_lg_amount, buy_lg_amount_rate FROM tu_moneyflow_dc WHERE ts_code = '000002.SZ' ORDER BY trade_date DESC LIMIT 10\"\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here's the original query reproduced:\n\n```sql\nSELECT trade_date, name, pct_change, close, buy_elg_amount, buy_elg_amount_rate, buy_lg_amount, buy_lg_amount_rate FROM tu_moneyflow_dc WHERE ts_code = '000002.SZ' ORDER BY trade_date DESC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-错误用例\n测试名称: 股票简称错误\n查询语句: 茅台的主力资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 茅台的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 茅台的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 茅台的主力\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：贵州茅台\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.10 个股主力资金-错误用例\n测试名称: 歧义股票名称\n查询语句: 平安的主力资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 平安的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 平安的主力\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金\n测试名称: 银行板块\n查询语句: 银行板块的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 银行板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 银行板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 银行\n2025-07-07 11:22:13 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:22:13 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:22:13 - sector_code_mapper - INFO - 开始刷新板块代码缓存\n2025-07-07 11:22:13 - sector_code_mapper - INFO - 板块代码缓存刷新完成，共缓存86个板块映射\n2025-07-07 11:22:13 - parameter_extractor - INFO - 板块代码映射: 银行 -> BK0475.DC\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金\n测试名称: 新能源板块\n查询语句: 新能源板块的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 新能源板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 新能源板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 新能源\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 未找到板块代码映射: 新能源\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金\n测试名称: 白酒板块\n查询语句: 白酒板块的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 白酒板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 白酒板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 白酒\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 未找到板块代码映射: 白酒\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金\n测试名称: 房地产板块\n查询语句: 房地产板块的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 房地产板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 房地产板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 房地产\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 未找到板块代码映射: 房地产\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - error_handler - ERROR - [QUERY_ERROR] 未找到房地产在20250704的主力资金数据\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金\n测试名称: 证券板块\n查询语句: 证券板块的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 证券板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 证券板块的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 证券\n2025-07-07 11:22:13 - parameter_extractor - INFO - 板块代码映射: 证券 -> BK0473.DC\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-时间指定\n测试名称: 银行板块昨天\n查询语句: 银行板块昨天的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 银行板块昨天的主力资金\n2025-07-07 11:22:13 - date_intelligence - INFO - 日期智能解析: '银行板块昨天的主力资金' -> '银行板块 2025-07-03的主力资金'\n2025-07-07 11:22:13 - date_intelligence - INFO - 解析详情: 将'昨天'解析为相对时间点: 2025-07-03\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 银行板块 2025-07-03的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 银行板块\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 2025-07-03\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到日期: 2025-07-03\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-时间指定\n测试名称: 新能源板块指定日期\n查询语句: 新能源板块2025-07-01的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 新能源板块2025-07-01的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 新能源板块2025-07-01的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到日期: 2025-07-01\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 新能源\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 未找到板块代码映射: 新能源\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-时间指定\n测试名称: 白酒板块今天\n查询语句: 白酒板块今天的主力资金\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 白酒板块今天的主力资金\n2025-07-07 11:22:13 - date_intelligence - INFO - 日期智能解析: '白酒板块今天的主力资金' -> '白酒板块 2025-07-04的主力资金'\n2025-07-07 11:22:13 - date_intelligence - INFO - 解析详情: 将'今天'解析为当前时间点: 2025-07-04\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 白酒板块 2025-07-04的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 白酒板块\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-错误用例\n测试名称: 缺少板块后缀\n查询语句: 银行的主力资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 银行的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 银行的主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 银行\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 银行的主力\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-错误用例\n测试名称: 缺少板块后缀\n查询语句: 新能源主力资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 新能源主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 新能源主力资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 能源主力\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 能源主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 新能源主力\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 新能源主力资金\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-错误用例\n测试名称: 缺少板块后缀\n查询语句: 白酒主力净流入\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 白酒主力净流入\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 白酒主力净流入\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 个股主力资金\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 酒主力净流入\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 白酒主力净流入\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-错误用例\n测试名称: 非标准术语\n查询语句: 银行板块的机构资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 银行板块的机构资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 银行板块的机构资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 银行\n2025-07-07 11:22:13 - parameter_extractor - INFO - 板块代码映射: 银行 -> BK0475.DC\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.11 板块主力资金-错误用例\n测试名称: 非标准术语\n查询语句: 新能源板块的大资金\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 新能源板块的大资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 新能源板块的大资金\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 板块主力资金\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到板块: 新能源\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 未找到板块代码映射: 新能源\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 查询 '板块主力资金' 未指定日期，使用最新交易日\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询\n测试名称: 贵州茅台利润\n查询语句: 贵州茅台的利润\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 利润\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询\n测试名称: 贵州茅台净利润\n查询语句: 贵州茅台的净利润\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台的净利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台的净利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 净利润\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询\n测试名称: 万科A营收\n查询语句: 万科A的营收\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 万科A的营收\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A的营收\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 营收\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询\n测试名称: 中国平安营业收入\n查询语句: 中国平安的营业收入\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 中国平安的营业收入\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安的营业收入\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票名称 '中国平安'，转换为: 601318.SH\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 601318.SH\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 601318.SH, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 营业收入\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 601318.SH -> 601318.SH (中国平安)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['601318.SH']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询\n测试名称: 宁德时代净利润\n查询语句: 宁德时代的净利润\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 宁德时代的净利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代的净利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询词 '宁德时代' 转换为: 300750.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 300750.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 300750.SZ, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 300750.SZ -> 300750.SZ (宁德时代)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-时间指定\n测试名称: 2024年净利润\n查询语句: 贵州茅台2024年的净利润\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台2024年的净利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台2024年的净利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-时间指定\n测试名称: 最新营收\n查询语句: 万科A最新的营收\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 万科A最新的营收\n2025-07-07 11:22:13 - date_intelligence - INFO - 日期智能解析: '万科A最新的营收' -> '万科A 2025-07-04的营收'\n2025-07-07 11:22:13 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科A 2025-07-04的营收\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票名称 '万科A'，转换为: 000002.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 000002.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 000002.SZ, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 000002.SZ -> 000002.SZ (万科A)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['000002.SZ']\n2025-07-07 11:22:13 - sql_agent_modular - ERROR - 模板查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-时间指定\n测试名称: 2024Q3利润\n查询语句: 平安银行2024Q3的利润\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 平安银行2024Q3的利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安银行2024Q3的利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票名称 '平安银行'，转换为: 000001.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 000001.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 000001.SZ, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 000001.SZ -> 000001.SZ (平安银行)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['000001.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到报告期: 20240930\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-时间指定\n测试名称: 2024第三季度营收\n查询语句: 宁德时代2024年第三季度的营业收入\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 宁德时代2024年第三季度的营业收入\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 宁德时代2024年第三季度的营业收入\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询词 '宁德时代' 转换为: 300750.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 从查询中提取到股票: 300750.SZ\n2025-07-07 11:22:13 - unified_stock_validator - INFO - 成功提取股票代码: 300750.SZ, 查询意图: comprehensive\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 年第三季度\n2025-07-07 11:22:13 - stock_validation_helper - INFO - 股票验证成功: 300750.SZ -> 300750.SZ (宁德时代)\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到股票: ['300750.SZ']\n2025-07-07 11:22:13 - parameter_extractor - INFO - 提取到报告期: 20240930\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-其他表达\n测试名称: 赚钱表达\n查询语句: 茅台赚了多少钱\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 茅台赚了多少钱\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 茅台赚了多少钱\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 台赚了多少钱\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：贵州茅台\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-其他表达\n测试名称: 盈利情况\n查询语句: 万科盈利情况\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 万科盈利情况\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 万科盈利情况\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 万科A\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 万科A\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 万科A\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：万科A\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-其他表达\n测试名称: 收入表达\n查询语句: 中国平安收入是多少\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 中国平安收入是多少\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 中国平安收入是多少\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 安收入是多少\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 中国平安收入\n2025-07-07 11:22:13 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 中国平安收入是多少\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-错误用例\n测试名称: 股票简称错误\n查询语句: 茅台的利润\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 茅台的利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 茅台的利润\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 请使用完整公司名称，如：贵州茅台\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.12 利润查询-错误用例\n测试名称: 歧义股票名称\n查询语句: 平安的营收\n期望结果: 失败\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: 平安的营收\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: 平安的营收\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: 利润查询\n2025-07-07 11:22:13 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:13 - error_handler - INFO - [INVALID_STOCK] 无法识别输入内容\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名\n测试名称: PE最高前10\n查询语句: PE最高的前10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 收到查询请求: PE最高的前10\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 日期智能处理后的查询: PE最高的前10\n2025-07-07 11:22:13 - sql_agent_modular - INFO - 匹配到快速查询模板: PE排名\n2025-07-07 11:22:15 - sql_agent_modular - ERROR - 模板查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:15 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:15 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名\n测试名称: 市盈率前20\n查询语句: 市盈率排名前20\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:15 - sql_agent_modular - INFO - 收到查询请求: 市盈率排名前20\n2025-07-07 11:22:15 - sql_agent_modular - INFO - 日期智能处理后的查询: 市盈率排名前20\n2025-07-07 11:22:15 - sql_agent_modular - INFO - 匹配到快速查询模板: PE排名\n2025-07-07 11:22:16 - sql_agent_modular - ERROR - 模板查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:16 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:16 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名\n测试名称: PE最低前10\n查询语句: PE最低的前10\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:16 - sql_agent_modular - INFO - 收到查询请求: PE最低的前10\n2025-07-07 11:22:16 - sql_agent_modular - INFO - 日期智能处理后的查询: PE最低的前10\n2025-07-07 11:22:16 - sql_agent_modular - INFO - 匹配到快速查询模板: PE排名\n2025-07-07 11:22:18 - sql_agent_modular - ERROR - 模板查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:18 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:18 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名\n测试名称: 市盈率最高前5\n查询语句: 市盈率最高的前5\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:18 - sql_agent_modular - INFO - 收到查询请求: 市盈率最高的前5\n2025-07-07 11:22:18 - sql_agent_modular - INFO - 日期智能处理后的查询: 市盈率最高的前5\n2025-07-07 11:22:18 - sql_agent_modular - INFO - 匹配到快速查询模板: PE排名\n2025-07-07 11:22:19 - sql_agent_modular - ERROR - 模板查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:19 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:19 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名-默认前10\n测试名称: PE默认排名\n查询语句: PE排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:19 - sql_agent_modular - INFO - 收到查询请求: PE排名\n2025-07-07 11:22:19 - sql_agent_modular - INFO - 日期智能处理后的查询: PE排名\n2025-07-07 11:22:19 - sql_agent_modular - INFO - 匹配到快速查询模板: PE排名\n2025-07-07 11:22:21 - sql_agent_modular - ERROR - 模板查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:21 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:21 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名-默认前10\n测试名称: 市盈率默认排名\n查询语句: 市盈率排名\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:21 - sql_agent_modular - INFO - 收到查询请求: 市盈率排名\n2025-07-07 11:22:21 - sql_agent_modular - INFO - 日期智能处理后的查询: 市盈率排名\n2025-07-07 11:22:21 - sql_agent_modular - INFO - 匹配到快速查询模板: PE排名\n2025-07-07 11:22:22 - sql_agent_modular - ERROR - 模板查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:22 - error_handler - ERROR - [TEMPLATE_EXECUTION_ERROR] 查询执行失败: unsupported format string passed to NoneType.__format__\n2025-07-07 11:22:22 - sql_agent_modular - INFO - 使用快速查询路径成功\n实际结果: 失败\n异常错误: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n============================================================\n测试类别: 1.13 PE排名-默认前10\n测试名称: PE默认排行\n查询语句: PE排行\n期望结果: 成功\n------------------------------------------------------------\n2025-07-07 11:22:22 - sql_agent_modular - INFO - 收到查询请求: PE排行\n2025-07-07 11:22:22 - sql_agent_modular - INFO - 日期智能处理后的查询: PE排行\n2025-07-07 11:22:22 - sql_agent_modular - INFO - 使用传统LLM查询路径\n2025-07-07 11:22:22 - stock_code_mapper - WARNING - 无法转换实体到ts_code: PE排行\n2025-07-07 11:22:22 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 排行\n2025-07-07 11:22:22 - parameter_extractor - WARNING - 股票验证失败: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n2025-07-07 11:22:22 - parameter_extractor - INFO - 数量限制: 10\n\u001b[32;1m\u001b[1;3mAction: sql_db_list_tables\nAction Input: \"\"\u001b[0m\u001b[38;5;200m\u001b[1;3mtu_anns_d, tu_balancesheet, tu_cashflow, tu_daily_basic, tu_daily_detail, tu_dc_index, tu_fina_indicator, tu_forecast, tu_income, tu_irm_qa_sh, tu_irm_qa_sz, tu_moneyflow_dc, tu_moneyflow_ind_dc, tu_stock_basic, tu_suspend_d\u001b[0m\u001b[32;1m\u001b[1;3mBased on the table names, the most relevant tables for PE (Price-to-Earnings) ratio information would likely be `tu_daily_basic` or `tu_fina_indicator`. I'll check the schema of these tables to find the relevant columns.\n\nAction: sql_db_schema\nAction Input: \"tu_daily_basic, tu_fina_indicator\"\u001b[0m\u001b[33;1m\u001b[1;3m\nCREATE TABLE tu_daily_basic (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\ttrade_date VARCHAR(8) NOT NULL COMMENT '交易日期', \n\tclose FLOAT COMMENT '当日收盘价', \n\tturnover_rate FLOAT COMMENT '换手率（%%）', \n\tturnover_rate_f FLOAT COMMENT '换手率（自由流通股）', \n\tvolume_ratio FLOAT COMMENT '量比', \n\tpe FLOAT COMMENT '市盈率（总市值/净利润）', \n\tpe_ttm FLOAT COMMENT '市盈率（TTM）', \n\tpb FLOAT COMMENT '市净率（总市值/净资产）', \n\tps FLOAT COMMENT '市销率', \n\tps_ttm FLOAT COMMENT '市销率（TTM）', \n\tdv_ratio FLOAT COMMENT '股息率（%%）', \n\tdv_ttm FLOAT COMMENT '股息率（TTM）（%%）', \n\ttotal_share FLOAT COMMENT '总股本（万股）', \n\tfloat_share FLOAT COMMENT '流通股本（万股）', \n\tfree_share FLOAT COMMENT '自由流通股本（万）', \n\ttotal_mv FLOAT COMMENT '总市值（万元）', \n\tcirc_mv FLOAT COMMENT '流通市值（万元）', \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='每日指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_daily_basic table:\nid\tts_code\ttrade_date\tclose\tturnover_rate\tturnover_rate_f\tvolume_ratio\tpe\tpe_ttm\tpb\tps\tps_ttm\tdv_ratio\tdv_ttm\ttotal_share\tfloat_share\tfree_share\ttotal_mv\tcirc_mv\tupdate_time\n1\t300120.SZ\t20200102\t6.54\t2.4765\t2.6737\t1.28\t22.5804\t23.6585\t1.2694\t1.4736\t1.3599\t1.2903\t1.2903\t46475.7\t23422.9\t21695.6\t303951.0\t153186.0\t2025-06-12 13:23:59\n2\t603595.SH\t20200102\t26.24\t3.863\t3.865\t1.23\t48.6913\tNone\t5.5418\t6.44\t9.267\t0.2059\t0.2059\t21411.1\t7087.6\t7083.96\t561826.0\t185978.0\t2025-06-12 13:23:59\n3\t300218.SZ\t20200102\t8.02\t1.5494\t3.6431\t1.15\t75.5258\t24.5522\t1.6832\t1.0362\t1.038\t0.9352\t0.9352\t21698.7\t21627.6\t9198.24\t174024.0\t173454.0\t2025-06-12 13:23:59\n*/\n\n\nCREATE TABLE tu_fina_indicator (\n\tid BIGINT NOT NULL COMMENT '自增主键' AUTO_INCREMENT, \n\tts_code VARCHAR(10) NOT NULL COMMENT '证券代码', \n\tann_date VARCHAR(8) COMMENT '公告日期', \n\tend_date VARCHAR(8) NOT NULL COMMENT '报告期', \n\teps FLOAT COMMENT '基本每股收益', \n\tdt_eps FLOAT COMMENT '稀释每股收益', \n\tbps FLOAT COMMENT '每股净资产', \n\tocfps FLOAT COMMENT '每股经营活动产生的现金流量净额', \n\tcfps FLOAT COMMENT '每股现金流量净额', \n\troe FLOAT COMMENT '净资产收益率', \n\troe_waa FLOAT COMMENT '加权平均净资产收益率', \n\troe_dt FLOAT COMMENT '净资产收益率(扣除非经常损益)', \n\troa FLOAT COMMENT '总资产报酬率', \n\troic FLOAT COMMENT '投入资本回报率', \n\tgrossprofit_margin FLOAT COMMENT '销售毛利率', \n\tnetprofit_margin FLOAT COMMENT '销售净利率', \n\tgross_margin FLOAT COMMENT '毛利', \n\tprofit_to_gr FLOAT COMMENT '净利润/营业总收入', \n\top_of_gr FLOAT COMMENT '营业利润/营业总收入', \n\tbasic_eps_yoy FLOAT COMMENT '基本每股收益同比增长率(%%)', \n\tnetprofit_yoy FLOAT COMMENT '归属母公司股东的净利润同比增长率(%%)', \n\tdt_netprofit_yoy FLOAT COMMENT '归属母公司股东的净利润-扣除非经常损益同比增长率(%%)', \n\tor_yoy FLOAT COMMENT '营业收入同比增长率(%%)', \n\top_yoy FLOAT COMMENT '营业利润同比增长率(%%)', \n\tassets_yoy FLOAT COMMENT '资产总计相对年初增长率(%%)', \n\tequity_yoy FLOAT COMMENT '净资产同比增长率', \n\tassets_turn FLOAT COMMENT '总资产周转率', \n\tca_turn FLOAT COMMENT '流动资产周转率', \n\tfa_turn FLOAT COMMENT '固定资产周转率', \n\tinv_turn FLOAT COMMENT '存货周转率', \n\tar_turn FLOAT COMMENT '应收账款周转率', \n\tinvturn_days FLOAT COMMENT '存货周转天数', \n\tarturn_days FLOAT COMMENT '应收账款周转天数', \n\tturn_days FLOAT COMMENT '营业周期', \n\tdebt_to_assets FLOAT COMMENT '资产负债率', \n\tcurrent_ratio FLOAT COMMENT '流动比率', \n\tquick_ratio FLOAT COMMENT '速动比率', \n\tcash_ratio FLOAT COMMENT '保守速动比率', \n\tocf_to_shortdebt FLOAT COMMENT '经营活动产生的现金流量净额/流动负债', \n\tdebt_to_eqt FLOAT COMMENT '产权比率', \n\tfcff FLOAT COMMENT '企业自由现金流量', \n\tfcfe FLOAT COMMENT '股权自由现金流量', \n\tocf_to_or FLOAT COMMENT '经营活动产生的现金流量净额/营业收入', \n\tassets_to_eqt FLOAT COMMENT '权益乘数', \n\tdp_assets_to_eqt FLOAT COMMENT '权益乘数(杜邦分析)', \n\troa_dp FLOAT COMMENT '总资产净利率(杜邦分析)', \n\tq_eps FLOAT COMMENT '每股收益(单季度)', \n\tq_roe FLOAT COMMENT '净资产收益率(单季度)', \n\tq_dt_roe FLOAT COMMENT '净资产单季度收益率(扣除非经常损益)', \n\tq_sales_yoy FLOAT COMMENT '营业收入同比增长率(%%)(单季度)', \n\tq_op_qoq FLOAT COMMENT '营业利润环比增长率(%%)(单季度)', \n\tq_netprofit_yoy FLOAT COMMENT '归属母公司股东的净利润同比增长率(%%)(单季度)', \n\trd_exp FLOAT COMMENT '研发费用', \n\tprofit_dedt FLOAT COMMENT '扣除非经常性损益后的净利润', \n\tebit FLOAT COMMENT '息税前利润', \n\tebitda FLOAT COMMENT '息税折旧摊销前利润', \n\tupdate_flag VARCHAR(1) COMMENT '更新标识', \n\tcreate_time TIMESTAMP NULL COMMENT '创建时间' DEFAULT CURRENT_TIMESTAMP, \n\tupdate_time TIMESTAMP NULL COMMENT '更新时间' DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, \n\tPRIMARY KEY (id)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci COMMENT='财务指标数据表' DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from tu_fina_indicator table:\nid\tts_code\tann_date\tend_date\teps\tdt_eps\tbps\tocfps\tcfps\troe\troe_waa\troe_dt\troa\troic\tgrossprofit_margin\tnetprofit_margin\tgross_margin\tprofit_to_gr\top_of_gr\tbasic_eps_yoy\tnetprofit_yoy\tdt_netprofit_yoy\tor_yoy\top_yoy\tassets_yoy\tequity_yoy\tassets_turn\tca_turn\tfa_turn\tinv_turn\tar_turn\tinvturn_days\tarturn_days\tturn_days\tdebt_to_assets\tcurrent_ratio\tquick_ratio\tcash_ratio\tocf_to_shortdebt\tdebt_to_eqt\tfcff\tfcfe\tocf_to_or\tassets_to_eqt\tdp_assets_to_eqt\troa_dp\tq_eps\tq_roe\tq_dt_roe\tq_sales_yoy\tq_op_qoq\tq_netprofit_yoy\trd_exp\tprofit_dedt\tebit\tebitda\tupdate_flag\tcreate_time\tupdate_time\n5502\t000001.SZ\t20250315\t20241231\t2.15\t2.15\t21.8951\t3.26\t-2.1268\t9.2038\t10.08\t9.272\tNone\tNone\tNone\t30.3405\tNone\t30.3405\t37.6332\t-4.4444\t-4.1912\t-3.4\t-10.9315\t-4.6989\t3.2603\t4.7666\t0.0258\tNone\tNone\tNone\tNone\tNone\tNone\tNone\t91.4228\tNone\tNone\tNone\tNone\t10.6588\tNone\tNone\t0.4318\t11.6588\t11.7419\t0.7838\t0.2463\t0.97\t1.0332\t-5.2664\t-53.5103\t-29.9267\tNone\t44838000000.0\tNone\tNone\t1\t2025-06-12 14:17:08\t2025-06-12 14:17:08\n5503\t000002.SZ\t20250401\t20241231\t-4.17\t-4.17\t16.987\t0.3185\t-1.084\t-21.823\t-21.82\t-20.0214\t-2.9938\t-5.8793\t10.1731\t-14.1921\t34911600000.0\t-14.1921\t-13.3004\t-504.854\t-506.805\t-563.49\t-26.3157\t-256.038\t-14.5257\t-19.187\t0.2459\t0.3319\t17.2262\t0.4943\t44.5557\t728.303\t8.0798\t736.383\t73.6558\t1.276\t0.5542\t0.4421\t0.0053\t2.7959\t24613400000.0\t23400200000.0\t0.0111\t3.7959\t6.1553\t-3.5454\t-2.6432\t-14.4396\t-14.1607\t-29.7263\t-346.412\t-2061.73\t507844000.0\t-45393700000.0\t-41780100000.0\t-33058400000.0\t1\t2025-06-12 14:17:08\t2025-06-12 14:17:08\n5504\t000004.SZ\t20250429\t20241231\t-0.9936\t-0.9936\t0.4837\t-0.1259\t-0.1474\t-101.332\t-101.33\t-95.7065\t-43.8556\t-109.216\t76.9011\t-139.081\t75870900.0\t-139.081\t-153.488\t16.2155\t16.2157\t10.16\t-10.3483\t0.8181\t-24.7287\t-67.2561\t0.2723\t0.3953\t15.3778\t7.1392\t0.7586\t50.4258\t474.558\t524.984\t76.571\t0.8692\t0.8433\t0.7989\t-0.0828\t3.2682\t-16406200.0\t-16406200.0\t-0.169\t4.2682\t2.7913\t-36.3028\t-0.723\t-85.5359\t-81.376\t-22.8232\t-598.597\t21.417\t44463300.0\t-124233000.0\t-158902000.0\t-150843000.0\t1\t2025-06-12 14:17:08\t2025-06-12 14:17:08\n*/\u001b[0m\u001b[32;1m\u001b[1;3mThe `tu_daily_basic` table contains the PE (Price-to-Earnings) ratio information in the `pe` and `pe_ttm` columns. I'll query the most recent PE ratios for stocks, limiting to 10 results.\n\nAction: sql_db_query_checker\nAction Input: \"SELECT ts_code, trade_date, pe, pe_ttm FROM tu_daily_basic ORDER BY trade_date DESC, pe ASC LIMIT 10\"\u001b[0m\u001b[36;1m\u001b[1;3mThe original query does not contain any of the common mistakes listed. Here is the reproduced original query:\n\n```sql\nSELECT ts_code, trade_date, pe, pe_ttm FROM tu_daily_basic ORDER BY trade_date DESC, pe ASC LIMIT 10\n```\u001b[0m\u001b[32;1m\u001b[1;3m\u001b[0m\n\n\u001b[1m> Finished chain.\u001b[0m\n实际结果: 成功\n异常错误: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n================================================================================\n测试报告\n================================================================================\n总测试数: 332\n通过数量: 117\n失败数量: 215\n通过率: 35.2%\n\n================================================================================\n失败测试详情\n================================================================================\n\n类别: 1.1 股价查询\n测试: 基础查询-最新\n查询: 贵州茅台最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询\n测试: 指定日期\n查询: 贵州茅台20250627的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询\n测试: 相对日期-昨天\n查询: 平安银行昨天的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询\n测试: 股票代码查询\n查询: 600519.SH最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询\n测试: 日期格式变体\n查询: 贵州茅台2025-06-27的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询\n测试: 深市股票代码\n查询: 000001.SZ的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-边界测试\n测试: 中文日期格式\n查询: 贵州茅台2025年06月27日的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-边界测试\n测试: 无后缀股票代码\n查询: 600519最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-边界测试\n测试: 小写后缀\n查询: 600519.sh最新股价\n错误: 证券代码后缀大小写错误，应为.SH\n\n类别: 1.1 股价查询-边界测试\n测试: 小写后缀\n查询: 600519.sh最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-边界测试\n测试: 相对日期-前天\n查询: 贵州茅台前天的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-边界测试\n测试: 相对日期-上个交易日\n查询: 贵州茅台上个交易日的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-错误用例\n测试: 股票简称错误\n查询: 茅台最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-错误用例\n测试: 歧义股票名称\n查询: 平安最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-错误用例\n测试: 不存在的股票代码\n查询: 123456最新股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-错误用例\n测试: 无效日期\n查询: 贵州茅台2025-06-31的股价\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.1 股价查询-错误用例\n测试: 空字符串查询\n查询: \n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交量-昨天\n查询: 平安银行昨天的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交量-最新\n查询: 贵州茅台最新成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交量-默认\n查询: 万科A的成交量\n错误: 此查询需要指定日期\n\n类别: 1.2 成交量查询\n测试: 成交量-默认\n查询: 万科A的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交量-今天\n查询: 600519.SH今天的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交额-默认\n查询: 中国平安的成交额\n错误: 此查询需要指定日期\n\n类别: 1.2 成交量查询\n测试: 成交额-默认\n查询: 中国平安的成交额\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交额-昨天\n查询: 宁德时代昨天的成交额\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交额-最新\n查询: 比亚迪最新成交额\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询\n测试: 成交额-股票代码\n查询: 000001.SZ的成交额\n错误: 此查询需要指定日期\n\n类别: 1.2 成交量查询\n测试: 成交额-股票代码\n查询: 000001.SZ的成交额\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-边界测试\n测试: 股票名称清理测试\n查询: 万科A前天的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-边界测试\n测试: 日期替换不影响股票提取\n查询: 中国平安昨天的成交额\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-边界测试\n测试: 日期替换后的股票提取\n查询: 贵州茅台最近5天的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-边界测试\n测试: 今天替换测试\n查询: 宁德时代今天的成交额\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-边界测试\n测试: 上个交易日\n查询: 比亚迪上个交易日的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-错误用例\n测试: 误匹配排名模板\n查询: 成交量排名\n错误: None\n\n类别: 1.2 成交量查询-错误用例\n测试: 误匹配排名模板\n查询: 成交量排名\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-错误用例\n测试: 误匹配排名模板\n查询: 成交额排行\n错误: None\n\n类别: 1.2 成交量查询-错误用例\n测试: 误匹配排名模板\n查询: 成交额排行\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-错误用例\n测试: 股票简称错误\n查询: 茅台的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-错误用例\n测试: 不存在的股票\n查询: 不存在股票的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.2 成交量查询-错误用例\n测试: 未来日期\n查询: 贵州茅台2099年的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.3 估值指标查询\n测试: 市盈率查询\n查询: 中国平安的市盈率\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.3 估值指标查询\n测试: PE查询\n查询: 贵州茅台的PE\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.3 估值指标查询\n测试: 市净率查询\n查询: 平安银行的市净率\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.3 估值指标查询\n测试: PB查询\n查询: 比亚迪的PB\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询\n测试: 最近N天\n查询: 中国平安最近10天的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询\n测试: 日期范围\n查询: 宁德时代从2025/06/01到2025/06/30的K线\n错误: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n\n类别: 1.4 K线查询\n测试: 日期范围\n查询: 宁德时代从2025/06/01到2025/06/30的K线\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询\n测试: 中文日期\n查询: 宁德时代从6月1日到6月30日的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询\n测试: 走势查询\n查询: 贵州茅台最近30天的走势\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 至连接符\n查询: 贵州茅台2025-06-01至2025-06-30的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 到连接符\n查询: 万科A2025-06-01到2025-06-30的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: -连接符\n查询: 中国平安2025-06-01-2025-06-30的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: ~连接符\n查询: 比亚迪2025/6/1~2025/6/30的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 月份转换\n查询: 万科A6月的K线\n错误: 此查询需要指定日期范围\n\n类别: 1.4 K线查询-边界测试\n测试: 月份转换\n查询: 万科A6月的K线\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 年份转换\n查询: 中国平安2024年的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 季度转换\n查询: 宁德时代2025年第二季度的走势\n错误: 此查询需要指定日期范围\n\n类别: 1.4 K线查询-边界测试\n测试: 季度转换\n查询: 宁德时代2025年第二季度的走势\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 相对月份\n查询: 贵州茅台本月的K线\n错误: 此查询需要指定日期范围\n\n类别: 1.4 K线查询-边界测试\n测试: 相对月份\n查询: 贵州茅台本月的K线\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 上个月\n查询: 平安银行上个月的K线\n错误: 此查询需要指定日期范围\n\n类别: 1.4 K线查询-边界测试\n测试: 上个月\n查询: 平安银行上个月的K线\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 去年\n查询: 比亚迪去年的K线\n错误: 此查询需要指定日期范围\n\n类别: 1.4 K线查询-边界测试\n测试: 去年\n查询: 比亚迪去年的K线\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 中文数字-二十\n查询: 贵州茅台最近二十天的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 中文数字-十\n查询: 中国平安前十天的走势\n错误: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n\n类别: 1.4 K线查询-边界测试\n测试: 中文数字-十\n查询: 中国平安前十天的走势\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-边界测试\n测试: 中文数字-一百\n查询: 万科A最近一百天的K线\n错误: 此查询需要指定日期范围\n\n类别: 1.4 K线查询-边界测试\n测试: 中文数字-一百\n查询: 万科A最近一百天的K线\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-错误用例\n测试: 无股票名称\n查询: K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-错误用例\n测试: 股票简称\n查询: 茅台的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-错误用例\n测试: 无时间范围\n查询: 贵州茅台的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-错误用例\n测试: 不存在的股票\n查询: 不存在股票的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-错误用例\n测试: 无效月份\n查询: 贵州茅台13月的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.4 K线查询-错误用例\n测试: 无效季度\n查询: 中国平安2025年第五季度的K线\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名\n测试: 涨幅前10\n查询: 今天涨幅最大的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名\n测试: 跌幅前10\n查询: 今日跌幅最大的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名\n测试: 指定日期涨幅\n查询: 20250627涨幅前10\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名\n测试: 默认涨幅排名\n查询: 涨幅排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名\n测试: 跌幅最大\n查询: 跌幅最大的股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-边界测试\n测试: 中文数字-二十\n查询: 涨幅前二十\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-边界测试\n测试: 中文数字-五\n查询: 跌幅最大的前五只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-边界测试\n测试: 中文数字-一百\n查询: 涨幅前一百名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-边界测试\n测试: 昨天涨幅\n查询: 昨天涨幅排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-边界测试\n测试: 指定日期跌幅\n查询: 2025-06-27跌幅排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-边界测试\n测试: 上个交易日\n查询: 上个交易日涨幅前10\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-错误用例\n测试: 个股涨幅排名\n查询: 贵州茅台涨幅排名\n错误: None\n\n类别: 1.5 涨跌幅排名-错误用例\n测试: 个股涨幅排名\n查询: 贵州茅台涨幅排名\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-错误用例\n测试: 无效数量-0\n查询: 涨幅前0只股票\n错误: None\n\n类别: 1.5 涨跌幅排名-错误用例\n测试: 无效数量-0\n查询: 涨幅前0只股票\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.5 涨跌幅排名-错误用例\n测试: 数量过大\n查询: 涨幅前1000只股票\n错误: None\n\n类别: 1.5 涨跌幅排名-错误用例\n测试: 数量过大\n查询: 涨幅前1000只股票\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名\n测试: 总市值前20\n查询: 总市值最大的前20只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名\n测试: 流通市值前10\n查询: 流通市值最大的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名\n测试: 市值前50\n查询: 市值排名前50\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名\n测试: 市值前20名\n查询: 市值前20名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-默认前10\n测试: 总市值默认\n查询: 总市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-默认前10\n测试: 市值默认\n查询: 市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-默认前10\n测试: 流通市值默认\n查询: 流通市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-默认前10\n测试: 市值排行默认\n查询: 市值排行\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-TOP格式\n测试: TOP10格式\n查询: 市值TOP10\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-TOP格式\n测试: 总市值TOP20\n查询: 总市值TOP20\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-TOP格式\n测试: 流通市值TOP5\n查询: 流通市值TOP5\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-TOP格式\n测试: A股市值TOP15\n查询: A股市值TOP15\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-时间指定\n测试: 今天市值\n查询: 今天的市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-时间指定\n测试: 最新市值\n查询: 最新市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-时间指定\n测试: 昨天流通市值\n查询: 昨天流通市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.6 市值排名-时间指定\n测试: 指定日期市值\n查询: 2025-07-01市值排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名\n测试: 成交额前10\n查询: 成交额最大的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名\n测试: 成交额前20\n查询: 成交额排名前20\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名\n测试: 成交额前15\n查询: 成交额前15\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名\n测试: 昨天成交额前15\n查询: 昨天成交额最大的前15只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名-默认前10\n测试: 成交额默认\n查询: 成交额排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名-默认前10\n测试: 成交额排行默认\n查询: 成交额排行\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名-默认前10\n测试: A股成交额默认\n查询: A股成交额排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名-TOP格式\n测试: 成交额TOP10\n查询: 成交额TOP10\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名-TOP格式\n测试: 成交额TOP20\n查询: 成交额TOP20\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.7 成交额排名-TOP格式\n测试: 成交额TOP5\n查询: 成交额TOP5\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名\n测试: 成交量前10\n查询: 成交量最大的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名\n测试: 成交量前20\n查询: 成交量排名前20\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名\n测试: 成交量前15\n查询: 成交量前15\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名\n测试: 昨天成交量前15\n查询: 昨天成交量最大的前15只股票\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名-区分测试\n测试: 个股成交量查询\n查询: 贵州茅台的成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名-区分测试\n测试: 成交量排名查询\n查询: 成交量排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名-区分测试\n测试: 个股成交量\n查询: 平安银行成交量\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.8 成交量排名-区分测试\n测试: 成交量TOP排名\n查询: 成交量TOP10\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名\n测试: 主力流入前10\n查询: 主力净流入最多的前10只股票\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n\n类别: 1.9 主力资金排名\n测试: 主力流入前10\n查询: 主力净流入最多的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名\n测试: 主力流出前10\n查询: 主力净流出最多的前10只股票\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n\n类别: 1.9 主力资金排名\n测试: 主力流出前10\n查询: 主力净流出最多的前10只股票\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名\n测试: 主力流入前20\n查询: 主力净流入排名前20\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n\n类别: 1.9 主力资金排名\n测试: 主力流入前20\n查询: 主力净流入排名前20\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名\n测试: 主力流出前15\n查询: 主力净流出排名前15\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n\n类别: 1.9 主力资金排名\n测试: 主力流出前15\n查询: 主力净流出排名前15\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流入默认\n查询: 主力净流入排名\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流入默认\n查询: 主力净流入排名\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流入排行默认\n查询: 主力净流入排行\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_IN'\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流入排行默认\n查询: 主力净流入排行\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流出默认\n查询: 主力净流出排名\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流出默认\n查询: 主力净流出排名\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流出排行默认\n查询: 主力净流出排行\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'MONEY_FLOW_RANKING_OUT'\n\n类别: 1.9 主力资金排名-默认前10\n测试: 主力流出排行默认\n查询: 主力净流出排行\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名-错误用例\n测试: 非标准术语-机构\n查询: 机构资金流入排名\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.9 主力资金排名-错误用例\n测试: 非标准术语-大资金\n查询: 大资金流入排行\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金\n测试: 贵州茅台主力\n查询: 贵州茅台的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金\n测试: 平安银行主力\n查询: 平安银行的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金\n测试: 股票代码主力\n查询: 600519.SH的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金\n测试: 比亚迪主力\n查询: 比亚迪的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金\n测试: 万科A主力\n查询: 万科A的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-时间指定\n测试: 昨天主力\n查询: 贵州茅台昨天的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-时间指定\n测试: 指定日期主力\n查询: 平安银行2025-07-01的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-时间指定\n测试: 今天主力\n查询: 万科A今天的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-错误用例\n测试: 非标准术语-机构\n查询: 贵州茅台的机构资金\n错误: None\n\n类别: 1.10 个股主力资金-错误用例\n测试: 非标准术语-机构\n查询: 贵州茅台的机构资金\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-错误用例\n测试: 非标准术语-大资金\n查询: 平安银行的大资金流入\n错误: None\n\n类别: 1.10 个股主力资金-错误用例\n测试: 非标准术语-大资金\n查询: 平安银行的大资金流入\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-错误用例\n测试: 不支持的资金类型\n查询: 万科A的游资\n错误: None\n\n类别: 1.10 个股主力资金-错误用例\n测试: 不支持的资金类型\n查询: 万科A的游资\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-错误用例\n测试: 股票简称错误\n查询: 茅台的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.10 个股主力资金-错误用例\n测试: 歧义股票名称\n查询: 平安的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金\n测试: 银行板块\n查询: 银行板块的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金\n测试: 新能源板块\n查询: 新能源板块的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金\n测试: 白酒板块\n查询: 白酒板块的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金\n测试: 房地产板块\n查询: 房地产板块的主力资金\n错误: 未找到房地产在20250704的主力资金数据\n\n类别: 1.11 板块主力资金\n测试: 房地产板块\n查询: 房地产板块的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金\n测试: 证券板块\n查询: 证券板块的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-时间指定\n测试: 银行板块昨天\n查询: 银行板块昨天的主力资金\n错误: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n\n类别: 1.11 板块主力资金-时间指定\n测试: 银行板块昨天\n查询: 银行板块昨天的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-时间指定\n测试: 新能源板块指定日期\n查询: 新能源板块2025-07-01的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-时间指定\n测试: 白酒板块今天\n查询: 白酒板块今天的主力资金\n错误: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n\n类别: 1.11 板块主力资金-时间指定\n测试: 白酒板块今天\n查询: 白酒板块今天的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-错误用例\n测试: 缺少板块后缀\n查询: 银行的主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-错误用例\n测试: 缺少板块后缀\n查询: 新能源主力资金\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-错误用例\n测试: 缺少板块后缀\n查询: 白酒主力净流入\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-错误用例\n测试: 非标准术语\n查询: 银行板块的机构资金\n错误: None\n\n类别: 1.11 板块主力资金-错误用例\n测试: 非标准术语\n查询: 银行板块的机构资金\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.11 板块主力资金-错误用例\n测试: 非标准术语\n查询: 新能源板块的大资金\n错误: None\n\n类别: 1.11 板块主力资金-错误用例\n测试: 非标准术语\n查询: 新能源板块的大资金\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询\n测试: 贵州茅台利润\n查询: 贵州茅台的利润\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询\n测试: 贵州茅台利润\n查询: 贵州茅台的利润\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询\n测试: 贵州茅台净利润\n查询: 贵州茅台的净利润\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询\n测试: 贵州茅台净利润\n查询: 贵州茅台的净利润\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询\n测试: 万科A营收\n查询: 万科A的营收\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询\n测试: 万科A营收\n查询: 万科A的营收\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询\n测试: 中国平安营业收入\n查询: 中国平安的营业收入\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询\n测试: 中国平安营业收入\n查询: 中国平安的营业收入\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询\n测试: 宁德时代净利润\n查询: 宁德时代的净利润\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询\n测试: 宁德时代净利润\n查询: 宁德时代的净利润\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-时间指定\n测试: 2024年净利润\n查询: 贵州茅台2024年的净利润\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询-时间指定\n测试: 2024年净利润\n查询: 贵州茅台2024年的净利润\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-时间指定\n测试: 最新营收\n查询: 万科A最新的营收\n错误: 查询执行失败: type object 'SQLTemplates' has no attribute 'PROFIT_LATEST'\n\n类别: 1.12 利润查询-时间指定\n测试: 最新营收\n查询: 万科A最新的营收\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-时间指定\n测试: 2024Q3利润\n查询: 平安银行2024Q3的利润\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-时间指定\n测试: 2024第三季度营收\n查询: 宁德时代2024年第三季度的营业收入\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-其他表达\n测试: 赚钱表达\n查询: 茅台赚了多少钱\n错误: 请使用完整公司名称，如：贵州茅台\n\n类别: 1.12 利润查询-其他表达\n测试: 赚钱表达\n查询: 茅台赚了多少钱\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-其他表达\n测试: 盈利情况\n查询: 万科盈利情况\n错误: 请使用完整公司名称，如：万科A\n\n类别: 1.12 利润查询-其他表达\n测试: 盈利情况\n查询: 万科盈利情况\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-其他表达\n测试: 收入表达\n查询: 中国平安收入是多少\n错误: 无法识别输入内容。请输入：1) 6位股票代码（如002047）2) 证券代码（如600519.SH）3) 股票名称（如贵州茅台）\n\n类别: 1.12 利润查询-其他表达\n测试: 收入表达\n查询: 中国平安收入是多少\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-错误用例\n测试: 股票简称错误\n查询: 茅台的利润\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.12 利润查询-错误用例\n测试: 歧义股票名称\n查询: 平安的营收\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名\n测试: PE最高前10\n查询: PE最高的前10\n错误: 查询执行失败: unsupported format string passed to NoneType.__format__\n\n类别: 1.13 PE排名\n测试: PE最高前10\n查询: PE最高的前10\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名\n测试: 市盈率前20\n查询: 市盈率排名前20\n错误: 查询执行失败: unsupported format string passed to NoneType.__format__\n\n类别: 1.13 PE排名\n测试: 市盈率前20\n查询: 市盈率排名前20\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名\n测试: PE最低前10\n查询: PE最低的前10\n错误: 查询执行失败: unsupported format string passed to NoneType.__format__\n\n类别: 1.13 PE排名\n测试: PE最低前10\n查询: PE最低的前10\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名\n测试: 市盈率最高前5\n查询: 市盈率最高的前5\n错误: 查询执行失败: unsupported format string passed to NoneType.__format__\n\n类别: 1.13 PE排名\n测试: 市盈率最高前5\n查询: 市盈率最高的前5\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名-默认前10\n测试: PE默认排名\n查询: PE排名\n错误: 查询执行失败: unsupported format string passed to NoneType.__format__\n\n类别: 1.13 PE排名-默认前10\n测试: PE默认排名\n查询: PE排名\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名-默认前10\n测试: 市盈率默认排名\n查询: 市盈率排名\n错误: 查询执行失败: unsupported format string passed to NoneType.__format__\n\n类别: 1.13 PE排名-默认前10\n测试: 市盈率默认排名\n查询: 市盈率排名\n错误: 异常: 'gbk' codec can't encode character '\\u274c' in position 6: illegal multibyte sequence\n\n类别: 1.13 PE排名-默认前10\n测试: PE默认排行\n查询: PE排行\n错误: 异常: 'gbk' codec can't encode character '\\u2705' in position 6: illegal multibyte sequence\n\n详细报告已保存到: test_report_20250707_112246.json\n\n================================================================================\n分类统计\n================================================================================\n1.1 股价查询: 6/12 (50.0%)\n1.1 股价查询-边界测试: 4/10 (40.0%)\n1.1 股价查询-错误用例: 5/10 (50.0%)\n1.10 个股主力资金: 5/10 (50.0%)\n1.10 个股主力资金-时间指定: 3/6 (50.0%)\n1.10 个股主力资金-错误用例: 2/10 (20.0%)\n1.11 板块主力资金: 4/10 (40.0%)\n1.11 板块主力资金-时间指定: 1/6 (16.7%)\n1.11 板块主力资金-错误用例: 3/10 (30.0%)\n1.12 利润查询: 0/10 (0.0%)\n1.12 利润查询-其他表达: 0/6 (0.0%)\n1.12 利润查询-时间指定: 2/8 (25.0%)\n1.12 利润查询-错误用例: 2/4 (50.0%)\n1.13 PE排名: 0/8 (0.0%)\n1.13 PE排名-默认前10: 1/6 (16.7%)\n1.2 成交量查询: 5/16 (31.2%)\n1.2 成交量查询-边界测试: 5/10 (50.0%)\n1.2 成交量查询-错误用例: 3/10 (30.0%)\n1.3 估值指标查询: 4/8 (50.0%)\n1.4 K线查询: 3/8 (37.5%)\n1.4 K线查询-边界测试: 6/26 (23.1%)\n1.4 K线查询-错误用例: 6/12 (50.0%)\n1.5 涨跌幅排名: 5/10 (50.0%)\n1.5 涨跌幅排名-边界测试: 6/12 (50.0%)\n1.5 涨跌幅排名-错误用例: 0/6 (0.0%)\n1.6 市值排名: 4/8 (50.0%)\n1.6 市值排名-TOP格式: 4/8 (50.0%)\n1.6 市值排名-时间指定: 4/8 (50.0%)\n1.6 市值排名-默认前10: 4/8 (50.0%)\n1.7 成交额排名: 4/8 (50.0%)\n1.7 成交额排名-TOP格式: 3/6 (50.0%)\n1.7 成交额排名-默认前10: 3/6 (50.0%)\n1.8 成交量排名: 4/8 (50.0%)\n1.8 成交量排名-区分测试: 4/8 (50.0%)\n1.9 主力资金排名: 0/8 (0.0%)\n1.9 主力资金排名-错误用例: 2/4 (50.0%)\n1.9 主力资金排名-默认前10: 0/8 (0.0%)\n",
      "stderr": "Error in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\nError in StdOutCallbackHandler.on_chain_start callback: AttributeError(\"'NoneType' object has no attribute 'get'\")\n"
    },
    "RAG Agent": {
      "success": false,
      "elapsed": 12.189150333404541,
      "error": "结果文件未生成",
      "stdout": "2025-07-07 11:22:51 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:22:51 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:22:51 - date_intelligence - INFO - 已清理所有日期智能解析缓存\nRAG Agent 全面测试套件\n================================================================================\n开始时间: 2025-07-07 11:22:51\n测试配置: 8个功能模块，每个至少5个正向测试，3个负向测试\n预计测试用例数: 64+\n\n\n【1. 基础公告查询功能测试】\n\n================================================================================\n测试用例: 年报查询 - 最新\n功能: 基础公告查询 | 类型: 正向测试\n时间: 2025-07-07 11:22:51\n--------------------------------------------------------------------------------\n2025-07-07 11:22:51 - milvus_connector - INFO - Milvus连接成功: 10.0.0.77:19530\n2025-07-07 11:22:52 - milvus_connector - INFO - 集合 'stock_announcements' 已存在\n2025-07-07 11:22:52 - milvus_connector - INFO - 现有字段:\n2025-07-07 11:22:52 - milvus_connector - INFO -   - id: INT64\n2025-07-07 11:22:52 - milvus_connector - INFO -   - doc_id: VARCHAR\n2025-07-07 11:22:52 - milvus_connector - INFO -   - chunk_id: INT64\n2025-07-07 11:22:52 - milvus_connector - INFO -   - ts_code: VARCHAR\n2025-07-07 11:22:52 - milvus_connector - INFO -   - ann_date: VARCHAR\n2025-07-07 11:22:52 - milvus_connector - INFO -   - title: VARCHAR\n2025-07-07 11:22:52 - milvus_connector - INFO -   - text: VARCHAR\n2025-07-07 11:22:52 - milvus_connector - INFO -   - embeddings: FLOAT_VECTOR\n2025-07-07 11:22:52 - milvus_connector - INFO -   - metadata: JSON\n2025-07-07 11:22:52 - milvus_connector - INFO - 集合加载状态: Loaded\n2025-07-07 11:22:52 - milvus_connector - INFO - 集合已在内存中\n2025-07-07 11:22:57 - rag_agent - INFO - RAG Agent初始化完成\n2025-07-07 11:22:57 - rag_agent_modular - INFO - RAG Agent模块化版本初始化完成\n2025-07-07 11:22:57 - rag_agent_modular - INFO - 收到RAG查询: 贵州茅台最新年报\n2025-07-07 11:22:57 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:22:57 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:22:57 - stock_code_mapper - INFO - 开始刷新股票代码缓存\n2025-07-07 11:22:57 - stock_code_mapper - INFO - 股票代码缓存刷新完成，共缓存22556个映射\n2025-07-07 11:22:57 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 茅台最新\n2025-07-07 11:22:57 - unified_stock_validator - WARNING - 发现简称，建议使用: 贵州茅台\n2025-07-07 11:22:57 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 贵州茅台最新\n2025-07-07 11:22:57 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:22:57 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:22:57 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:22:57 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:57 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:22:57 - date_intelligence - INFO - 数据驱动查询最新交易日，查询范围：最近10天内\n2025-07-07 11:22:57 - date_intelligence - INFO - 更新今日交易日缓存: 2025-07-04\n2025-07-07 11:22:57 - date_intelligence - INFO - 获取最近交易日成功: 2025-07-04\n2025-07-07 11:22:57 - date_intelligence - INFO - 日期智能解析: '贵州茅台最新年报' -> '贵州茅台 2025-07-04年报'\n2025-07-07 11:22:57 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:22:57 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:22:57 - date_intelligence - INFO - 日期智能解析: '贵州茅台最新年报' -> '贵州茅台 2025-07-04年报'\n2025-07-07 11:22:57 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:22:57 - parameter_extractor - INFO - 数量限制: 10\n2025-07-07 11:22:57 - rag_agent_modular - INFO - 使用过滤条件搜索: {'stock_filter': ['600519.SH', '600519', '贵州茅台'], 'date': '2025-07-04'}\n2025-07-07 11:22:57 - milvus_connector - INFO - 集合加载状态: Loaded\n2025-07-07 11:22:57 - milvus_connector - INFO - 集合已在内存中\n2025-07-07 11:22:57 - rag_agent_modular - INFO - 放松过滤条件重试...\n2025-07-07 11:22:57 - milvus_connector - INFO - 集合加载状态: Loaded\n2025-07-07 11:22:57 - milvus_connector - INFO - 集合已在内存中\n2025-07-07 11:22:57 - error_handler - INFO - [NO_DATA_FOUND] 未找到数据\n",
      "stderr": "E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\pymilvus\\client\\__init__.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n  from pkg_resources import DistributionNotFound, get_distribution\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_rag_agent_comprehensive.py\", line 98, in wrapper\n    print(f\"状态: {status}\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u274c' in position 4: illegal multibyte sequence\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_rag_agent_comprehensive.py\", line 672, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_rag_agent_comprehensive.py\", line 570, in main\n    test_annual_report_latest()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_rag_agent_comprehensive.py\", line 122, in wrapper\n    print(f\"状态: \\u274c 异常\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u274c' in position 4: illegal multibyte sequence\n"
    },
    "Financial Agent": {
      "success": false,
      "elapsed": 43.35179829597473,
      "error": "结果文件未生成",
      "stdout": "2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:01 - schema_knowledge_base - INFO - 开始构建Schema知识库...\n2025-07-07 11:23:01 - schema_knowledge_base - INFO - Schema知识库构建完成，耗时: 0.19秒\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:01 - date_intelligence - INFO - 已清理所有日期智能解析缓存\nFinancial Agent 全面测试套件\n================================================================================\n开始时间: 2025-07-07 11:23:01\n测试配置: 8个功能模块，每个至少5个正向测试，3个负向测试\n预计测试用例数: 64+\n\n\n【1. 财务健康度分析功能测试】\n\n================================================================================\n测试用例: 财务健康度 - 公司全称\n功能: 财务健康度分析 | 类型: 正向测试\n时间: 2025-07-07 11:23:01\n--------------------------------------------------------------------------------\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:01 - financial_agent - INFO - 从Schema知识库获取财务表结构: ['tu_income', 'tu_balancesheet', 'tu_cashflow', 'tu_fina_indicator']\n2025-07-07 11:23:01 - financial_agent - INFO - Schema知识库已加载: 15个表, 549个字段\n2025-07-07 11:23:01 - financial_agent - INFO - Financial Analysis Agent初始化完成\n2025-07-07 11:23:01 - financial_agent_modular - INFO - Financial Agent模块化版本初始化完成\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 财务分析查询: 分析贵州茅台的财务健康度\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:01 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:01 - stock_code_mapper - INFO - 开始刷新股票代码缓存\n2025-07-07 11:23:01 - stock_code_mapper - INFO - 股票代码缓存刷新完成，共缓存22556个映射\n2025-07-07 11:23:01 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 分析贵州茅台\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 从查询中提取到股票名称 '贵州茅台'，转换为: 600519.SH\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 开始分析 600519.SH 的财务健康度\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 正在获取 600519.SH 的财务数据...\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 成功获取 4 期财务数据\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 正在计算财务健康度评分...\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 财务健康度评分: 81.0 (AA)\n2025-07-07 11:23:01 - financial_agent_modular - INFO - 正在生成LLM分析报告...\n2025-07-07 11:23:42 - financial_agent_modular - INFO - 财务健康度分析完成: 600519.SH\n",
      "stderr": "Traceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_financial_agent_comprehensive.py\", line 98, in wrapper\n    print(f\"状态: {status}\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 4: illegal multibyte sequence\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_financial_agent_comprehensive.py\", line 666, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_financial_agent_comprehensive.py\", line 565, in main\n    test_health_company_name()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_financial_agent_comprehensive.py\", line 122, in wrapper\n    print(f\"状态: \\u274c 异常\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u274c' in position 4: illegal multibyte sequence\n"
    },
    "Money Flow Agent": {
      "success": false,
      "elapsed": 26.369059562683105,
      "error": "结果文件未生成",
      "stdout": "2025-07-07 11:23:44 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:44 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:44 - schema_knowledge_base - INFO - 开始构建Schema知识库...\n2025-07-07 11:23:44 - schema_knowledge_base - INFO - Schema知识库构建完成，耗时: 0.16秒\n2025-07-07 11:23:44 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:44 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:44 - date_intelligence - INFO - 已清理所有日期智能解析缓存\nMoney Flow Agent 全面测试套件\n================================================================================\n开始时间: 2025-07-07 11:23:44\n测试配置: 8个功能模块，每个至少5个正向测试，3个负向测试\n预计测试用例数: 64+\n\n\n【1. 个股资金流向分析功能测试】\n\n================================================================================\n测试用例: 资金流向分析 - 基础\n功能: 个股资金流向分析 | 类型: 正向测试\n时间: 2025-07-07 11:23:44\n--------------------------------------------------------------------------------\n2025-07-07 11:23:44 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:44 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:44 - money_flow_agent - INFO - 从Schema知识库获取资金流向字段: 11个\n2025-07-07 11:23:44 - money_flow_agent - INFO - Schema知识库统计: 共549个字段, 中文映射517个\n2025-07-07 11:23:44 - money_flow_agent_modular - INFO - Money Flow Agent模块化版本初始化完成\n2025-07-07 11:23:44 - money_flow_agent_modular - INFO - 处理资金流向查询: 分析贵州茅台的资金流向\n2025-07-07 11:23:45 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:23:45 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:23:45 - stock_code_mapper - INFO - 开始刷新股票代码缓存\n2025-07-07 11:23:45 - stock_code_mapper - INFO - 股票代码缓存刷新完成，共缓存22556个映射\n2025-07-07 11:23:45 - stock_code_mapper - WARNING - 无法转换实体到ts_code: 分析贵州茅台\n2025-07-07 11:23:45 - unified_stock_validator - INFO - 从查询中提取到股票名称 '贵州茅台'，转换为: 600519.SH\n2025-07-07 11:23:45 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:23:45 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: money_flow\n2025-07-07 11:23:45 - money_flow_agent_modular - INFO - 开始资金流向分析: 600519.SH, 30天\n2025-07-07 11:23:45 - money_flow_analyzer - INFO - 开始分析 600519.SH 的资金流向（30天）\n2025-07-07 11:23:45 - money_flow_analyzer - INFO - 获取到 20 条资金流向数据\n2025-07-07 11:23:45 - money_flow_analyzer - INFO - 资金流向分析完成: 600519.SH\n",
      "stderr": "Traceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_money_flow_agent_comprehensive.py\", line 98, in wrapper\n    print(f\"状态: {status}\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 4: illegal multibyte sequence\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_money_flow_agent_comprehensive.py\", line 637, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_money_flow_agent_comprehensive.py\", line 541, in main\n    test_flow_analysis_basic()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_money_flow_agent_comprehensive.py\", line 122, in wrapper\n    print(f\"状态: \\u274c 异常\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u274c' in position 4: illegal multibyte sequence\n"
    },
    "Hybrid Agent": {
      "success": false,
      "elapsed": 13.278465032577515,
      "error": "结果文件未生成",
      "stdout": "2025-07-07 11:24:10 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:24:10 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:24:10 - date_intelligence - INFO - 已清理所有日期智能解析缓存\n2025-07-07 11:24:11 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:24:11 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:24:11 - schema_knowledge_base - INFO - 开始构建Schema知识库...\n2025-07-07 11:24:11 - schema_knowledge_base - INFO - Schema知识库构建完成，耗时: 0.16秒\n2025-07-07 11:24:14 - routing_monitor - INFO - 加载历史统计数据: 505条查询记录\n2025-07-07 11:24:14 - routing_monitor - INFO - 路由监控器初始化完成\n2025-07-07 11:24:14 - schema_enhanced_router - INFO - Schema增强路由器初始化完成\nHybrid Agent 全面测试套件\n================================================================================\n开始时间: 2025-07-07 11:24:14\n测试配置: 8个功能模块，每个至少5个正向测试，3个负向测试\n预计测试用例数: 64+\n\n\n【1. 智能路由功能测试】\n\n================================================================================\n测试用例: SQL路由 - 股价查询\n功能: 智能路由 | 类型: 正向测试\n时间: 2025-07-07 11:24:14\n--------------------------------------------------------------------------------\n2025-07-07 11:24:14 - hybrid_agent_modular - INFO - 初始化模块化版本的HybridAgent...\n2025-07-07 11:24:14 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:24:14 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:24:15 - sql_agent_modular - INFO - 初始化SQL Agent V2，准备加载Schema信息...\n2025-07-07 11:24:15 - sql_agent_modular - INFO - 使用Schema知识库获取表结构信息...\n2025-07-07 11:24:15 - sql_agent_modular - INFO - Schema信息加载完成，共15个表\n2025-07-07 11:24:15 - sql_agent_modular - INFO - SQL Agent V2初始化完成\n2025-07-07 11:24:15 - milvus_connector - INFO - Milvus连接成功: 10.0.0.77:19530\n2025-07-07 11:24:15 - milvus_connector - INFO - 集合 'stock_announcements' 已存在\n2025-07-07 11:24:15 - milvus_connector - INFO - 现有字段:\n2025-07-07 11:24:15 - milvus_connector - INFO -   - id: INT64\n2025-07-07 11:24:15 - milvus_connector - INFO -   - doc_id: VARCHAR\n2025-07-07 11:24:15 - milvus_connector - INFO -   - chunk_id: INT64\n2025-07-07 11:24:15 - milvus_connector - INFO -   - ts_code: VARCHAR\n2025-07-07 11:24:15 - milvus_connector - INFO -   - ann_date: VARCHAR\n2025-07-07 11:24:15 - milvus_connector - INFO -   - title: VARCHAR\n2025-07-07 11:24:15 - milvus_connector - INFO -   - text: VARCHAR\n2025-07-07 11:24:15 - milvus_connector - INFO -   - embeddings: FLOAT_VECTOR\n2025-07-07 11:24:15 - milvus_connector - INFO -   - metadata: JSON\n2025-07-07 11:24:15 - milvus_connector - INFO - 集合加载状态: Loaded\n2025-07-07 11:24:15 - milvus_connector - INFO - 集合已在内存中\n2025-07-07 11:24:20 - rag_agent - INFO - RAG Agent初始化完成\n2025-07-07 11:24:20 - rag_agent_modular - INFO - RAG Agent模块化版本初始化完成\n2025-07-07 11:24:20 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:24:20 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:24:20 - financial_agent - INFO - 从Schema知识库获取财务表结构: ['tu_income', 'tu_balancesheet', 'tu_cashflow', 'tu_fina_indicator']\n2025-07-07 11:24:20 - financial_agent - INFO - Schema知识库已加载: 15个表, 549个字段\n2025-07-07 11:24:20 - financial_agent - INFO - Financial Analysis Agent初始化完成\n2025-07-07 11:24:20 - financial_agent_modular - INFO - Financial Agent模块化版本初始化完成\n2025-07-07 11:24:20 - money_flow_agent - INFO - 从Schema知识库获取资金流向字段: 11个\n2025-07-07 11:24:20 - money_flow_agent - INFO - Schema知识库统计: 共549个字段, 中文映射517个\n2025-07-07 11:24:20 - money_flow_agent_modular - INFO - Money Flow Agent模块化版本初始化完成\n2025-07-07 11:24:20 - hybrid_agent_modular - INFO - 接收查询: 贵州茅台最新股价\n2025-07-07 11:24:20 - hybrid_agent_modular - INFO - 使用模板路由: 股价查询 -> SQL_ONLY\n2025-07-07 11:24:20 - hybrid_agent_modular - INFO - 路由决策: SQL_ONLY\n2025-07-07 11:24:20 - routing_monitor - INFO - 记录路由决策: q_1751858660796 -> SQL_ONLY\n2025-07-07 11:24:20 - hybrid_agent_modular - INFO - 解析后的查询类型: QueryType.SQL_ONLY, 原始决策: SQL_ONLY\n2025-07-07 11:24:20 - sql_agent_modular - INFO - 收到查询请求: 贵州茅台最新股价\n2025-07-07 11:24:20 - date_intelligence - INFO - 数据驱动查询最新交易日，查询范围：最近10天内\n2025-07-07 11:24:20 - date_intelligence - INFO - 更新今日交易日缓存: 2025-07-04\n2025-07-07 11:24:20 - date_intelligence - INFO - 获取最近交易日成功: 2025-07-04\n2025-07-07 11:24:20 - date_intelligence - INFO - 日期智能解析: '贵州茅台最新股价' -> '贵州茅台 2025-07-04股价'\n2025-07-07 11:24:20 - date_intelligence - INFO - 解析详情: 将'最新'解析为当前时间点: 2025-07-04\n2025-07-07 11:24:20 - sql_agent_modular - INFO - 日期智能处理后的查询: 贵州茅台 2025-07-04股价\n2025-07-07 11:24:20 - sql_agent_modular - INFO - 匹配到快速查询模板: 股价查询\n2025-07-07 11:24:20 - mysql_connector - INFO - MySQL连接成功: 10.0.0.77:3306/Tushare\n2025-07-07 11:24:20 - mysql_connector - INFO - MySQL连接器初始化完成\n2025-07-07 11:24:20 - stock_code_mapper - INFO - 开始刷新股票代码缓存\n2025-07-07 11:24:20 - stock_code_mapper - INFO - 股票代码缓存刷新完成，共缓存22556个映射\n2025-07-07 11:24:20 - unified_stock_validator - INFO - 从查询中提取到股票: 600519.SH\n2025-07-07 11:24:20 - unified_stock_validator - INFO - 成功提取股票代码: 600519.SH, 查询意图: comprehensive\n2025-07-07 11:24:20 - stock_validation_helper - INFO - 股票验证成功: 600519.SH -> 600519.SH (贵州茅台)\n2025-07-07 11:24:20 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:24:20 - parameter_extractor - INFO - 提取到股票: ['600519.SH']\n2025-07-07 11:24:20 - parameter_extractor - INFO - 提取到日期: 2025-07-04\n2025-07-07 11:24:20 - sql_agent_modular - INFO - 使用快速查询路径成功\n2025-07-07 11:24:20 - routing_monitor - INFO - 记录查询结果: q_1751858660796 -> 成功 (0.18s)\n",
      "stderr": "E:\\anaconda3\\envs\\stock-frontend\\Lib\\site-packages\\pymilvus\\client\\__init__.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n  from pkg_resources import DistributionNotFound, get_distribution\n--- Logging error ---\nTraceback (most recent call last):\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\logging\\__init__.py\", line 1163, in emit\n    stream.write(msg + self.terminator)\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 52: illegal multibyte sequence\nCall stack:\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 669, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 571, in main\n    test_routing_sql_price()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 62, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 165, in test_routing_sql_price\n    agent = HybridAgentModular()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\agents\\hybrid_agent_modular.py\", line 56, in __init__\n    self.logger.info(\"\\u2705 SQL Agent模块化版本初始化成功\")\nMessage: '\\u2705 SQL Agent模块化版本初始化成功'\nArguments: ()\n--- Logging error ---\nTraceback (most recent call last):\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\logging\\__init__.py\", line 1163, in emit\n    stream.write(msg + self.terminator)\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 52: illegal multibyte sequence\nCall stack:\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 669, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 571, in main\n    test_routing_sql_price()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 62, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 165, in test_routing_sql_price\n    agent = HybridAgentModular()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\agents\\hybrid_agent_modular.py\", line 63, in __init__\n    self.logger.info(\"\\u2705 RAG Agent模块化版本初始化成功\")\nMessage: '\\u2705 RAG Agent模块化版本初始化成功'\nArguments: ()\n--- Logging error ---\nTraceback (most recent call last):\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\logging\\__init__.py\", line 1163, in emit\n    stream.write(msg + self.terminator)\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 52: illegal multibyte sequence\nCall stack:\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 669, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 571, in main\n    test_routing_sql_price()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 62, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 165, in test_routing_sql_price\n    agent = HybridAgentModular()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\agents\\hybrid_agent_modular.py\", line 70, in __init__\n    self.logger.info(\"\\u2705 Financial Agent模块化版本初始化成功\")\nMessage: '\\u2705 Financial Agent模块化版本初始化成功'\nArguments: ()\n--- Logging error ---\nTraceback (most recent call last):\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\logging\\__init__.py\", line 1163, in emit\n    stream.write(msg + self.terminator)\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 52: illegal multibyte sequence\nCall stack:\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 669, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 571, in main\n    test_routing_sql_price()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 62, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 165, in test_routing_sql_price\n    agent = HybridAgentModular()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\agents\\hybrid_agent_modular.py\", line 77, in __init__\n    self.logger.info(\"\\u2705 Money Flow Agent模块化版本初始化成功\")\nMessage: '\\u2705 Money Flow Agent模块化版本初始化成功'\nArguments: ()\n--- Logging error ---\nTraceback (most recent call last):\n  File \"E:\\anaconda3\\envs\\stock-frontend\\Lib\\logging\\__init__.py\", line 1163, in emit\n    stream.write(msg + self.terminator)\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 52: illegal multibyte sequence\nCall stack:\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 669, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 571, in main\n    test_routing_sql_price()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 62, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 165, in test_routing_sql_price\n    agent = HybridAgentModular()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\agents\\hybrid_agent_modular.py\", line 99, in __init__\n    self.logger.info(\"\\u2705 模块化版本HybridAgent初始化完成\")\nMessage: '\\u2705 模块化版本HybridAgent初始化完成'\nArguments: ()\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 98, in wrapper\n    print(f\"状态: {status}\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u2705' in position 4: illegal multibyte sequence\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 669, in <module>\n    main()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 571, in main\n    test_routing_sql_price()\n  File \"E:\\PycharmProjects\\stock_analysis_system\\test_hybrid_agent_comprehensive.py\", line 122, in wrapper\n    print(f\"状态: \\u274c 异常\")\nUnicodeEncodeError: 'gbk' codec can't encode character '\\u274c' in position 4: illegal multibyte sequence\n"
    }
  },
  "start_time": "2025-07-07T11:13:43.965820",
  "end_time": "2025-07-07T11:24:22.600951",
  "duration": 638.635131
}